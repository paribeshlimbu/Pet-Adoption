{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\src\\\\containers\\\\Login\\\\Login.js\";\n// NPM Modules\nimport React, { useEffect } from 'react';\nimport { withNamespaces } from 'react-i18next'; // Material UI\n// Own components\n\nimport AuthForm from '../../components/forms/AuthForm'; // Models\n// Own modules\n// Assets\n// Login\n\nfunction Login(props) {\n  // Translate\n  const t = props.t; // Props destructuring\n\n  const activateAccount = props.activateAccount,\n        enqueueSnackbar = props.enqueueSnackbar;\n  const token = props.match.params.token; // Dispatch activate account\n\n  useEffect(() => {\n    if (token) {\n      activateAccount(token).then(result => enqueueSnackbar(t('Account activated successfully'), {\n        variant: 'success'\n      })).catch(error => enqueueSnackbar(error, {\n        variant: 'error'\n      }));\n    }\n  }, [token, activateAccount, enqueueSnackbar, t]); // Dispatch login action\n\n  const submitLogin = inputs => {\n    const login = inputs.login,\n          password = inputs.password;\n    props.login(login, password).then(res => enqueueSnackbar(t('Redirecting home...'), {\n      variant: 'info'\n    })).catch(error => enqueueSnackbar(error, {\n      variant: 'error'\n    }));\n  }; // Render\n\n\n  return React.createElement(AuthForm, {\n    form: \"login\",\n    isLoading: props.isAuthenticating,\n    onSubmit: submitLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n}\n\nexport default withNamespaces()(Login);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\containers\\Login\\Login.js"],"names":["React","useEffect","withNamespaces","AuthForm","Login","props","t","activateAccount","enqueueSnackbar","token","match","params","then","result","variant","catch","error","submitLogin","inputs","login","password","res","isAuthenticating"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,iCAArB,C,CACA;AACA;AACA;AAEA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAElB;AAFkB,QAGVC,CAHU,GAGJD,KAHI,CAGVC,CAHU,EAIlB;;AAJkB,QAKVC,eALU,GAK2BF,KAL3B,CAKVE,eALU;AAAA,QAKOC,eALP,GAK2BH,KAL3B,CAKOG,eALP;AAAA,QAMVC,KANU,GAMAJ,KAAK,CAACK,KAAN,CAAYC,MANZ,CAMVF,KANU,EAQlB;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,KAAJ,EAAW;AACPF,MAAAA,eAAe,CAACE,KAAD,CAAf,CACCG,IADD,CACMC,MAAM,IAAIL,eAAe,CAACF,CAAC,CAAC,gCAAD,CAAF,EAAsC;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAAtC,CAD/B,EAECC,KAFD,CAEOC,KAAK,IAAIR,eAAe,CAACQ,KAAD,EAAQ;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAR,CAF/B;AAGH;AACJ,GANQ,EAMN,CAACL,KAAD,EAAQF,eAAR,EAAyBC,eAAzB,EAA0CF,CAA1C,CANM,CAAT,CATkB,CAiBlB;;AACA,QAAMW,WAAW,GAAIC,MAAD,IAAY;AAAA,UACpBC,KADoB,GACAD,MADA,CACpBC,KADoB;AAAA,UACbC,QADa,GACAF,MADA,CACbE,QADa;AAE5Bf,IAAAA,KAAK,CAACc,KAAN,CAAYA,KAAZ,EAAmBC,QAAnB,EACCR,IADD,CACMS,GAAG,IAAIb,eAAe,CAACF,CAAC,CAAC,qBAAD,CAAF,EAA2B;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAA3B,CAD5B,EAECC,KAFD,CAEOC,KAAK,IAAIR,eAAe,CAACQ,KAAD,EAAQ;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAR,CAF/B;AAGH,GALD,CAlBkB,CAyBlB;;;AACA,SACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAET,KAAK,CAACiB,gBAFrB;AAGI,IAAA,QAAQ,EAAEL,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH;;AAED,eAAef,cAAc,GAAGE,KAAH,CAA7B","sourcesContent":["// NPM Modules\nimport React, { useEffect } from 'react';\nimport { withNamespaces } from 'react-i18next';\n// Material UI\n// Own components\nimport AuthForm from '../../components/forms/AuthForm';\n// Models\n// Own modules\n// Assets\n\n// Login\nfunction Login(props) {\n    \n    // Translate\n    const { t } = props;\n    // Props destructuring\n    const { activateAccount, enqueueSnackbar } = props;\n    const { token } = props.match.params;\n    \n    // Dispatch activate account\n    useEffect(() => {\n        if (token) {\n            activateAccount(token)\n            .then(result => enqueueSnackbar(t('Account activated successfully'), { variant: 'success', }))\n            .catch(error => enqueueSnackbar(error, { variant: 'error', }))\n        }\n    }, [token, activateAccount, enqueueSnackbar, t]);\n    \n    // Dispatch login action\n    const submitLogin = (inputs) => {\n        const { login, password } = inputs;\n        props.login(login, password)\n        .then(res => enqueueSnackbar(t('Redirecting home...'), { variant: 'info' }))\n        .catch(error => enqueueSnackbar(error, { variant: 'error', }));\n    }\n    \n    // Render\n    return (\n        <AuthForm \n            form='login'\n            isLoading={props.isAuthenticating} \n            onSubmit={submitLogin}\n        />\n    );\n}\n\nexport default withNamespaces()(Login);"]},"metadata":{},"sourceType":"module"}