{"ast":null,"code":"// NPM Modules\nimport Axios from 'axios'; // Material UI\n// Own modules\n\nimport Chat from '../models/Chat'; // Assets\n// CSS\n// Endpoint\n\nconst API_URL = \"\".concat(process.env.REACT_APP_API_URL, \"/chats\");\n/**\n* Objeto API\n*/\n\nexport default {\n  /**\n  * Obtener todos los chats\n  */\n  getChats: jwt => {\n    // Endpoint\n    let baseURL = \"\".concat(API_URL); // Config \n\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \".concat(jwt),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }; // Call endpoint and return\n\n    return Axios.get(baseURL, config).then(res => res.data.results.map(chat => new Chat(chat)));\n  },\n\n  /**\n  * Obtener toda la conversación de un chat\n  */\n  getChat: (id, jwt) => {\n    // Endpoint\n    let baseURL = \"\".concat(API_URL, \"/\").concat(id); // Config \n\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \".concat(jwt),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }; // Call endpoint and return\n\n    return Axios.get(baseURL, config).then(res => new Chat(res.data.result));\n  },\n\n  /**\n  * Crear un nuevo chat\n  * @param {Advert} slug Advert slug to chat creation\n  * @param {Advert} jwt JWT for authentication\n  */\n  postChat: (slug, jwt) => {\n    // Endpoint\n    const baseURL = \"\".concat(API_URL, \"/\").concat(slug); // Config \n\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \".concat(jwt),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }; // Call endpoint and return\n\n    return Axios.post(baseURL, config).then(res => new Chat(res.data.result));\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Administrator\\Downloads\\keepcoding-wallaclone-master\\frontend\\src\\services\\ChatServices.js"],"names":["Axios","Chat","API_URL","process","env","REACT_APP_API_URL","getChats","jwt","baseURL","config","headers","get","then","res","data","results","map","chat","getChat","id","result","postChat","slug","post"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CACA;AACA;AAEA;;AACA,MAAMC,OAAO,aAAMC,OAAO,CAACC,GAAR,CAAYC,iBAAlB,WAAb;AAEA;;;;AAGA,eAAe;AAEX;;;AAGAC,EAAAA,QAAQ,EAAEC,GAAG,IAAI;AACb;AACA,QAAIC,OAAO,aAAMN,OAAN,CAAX,CAFa,CAGb;;AACA,UAAMO,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,0CAA2BH,GAA3B,CADK;AAEL,wBAAgB;AAFX;AADE,KAAf,CAJa,CAUb;;AACA,WAAOP,KAAK,CAACW,GAAN,CAAUH,OAAV,EAAmBC,MAAnB,EACNG,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI,IAAIhB,IAAJ,CAASgB,IAAT,CAA7B,CADN,CAAP;AAEH,GAlBU;;AAoBX;;;AAGAC,EAAAA,OAAO,EAAE,CAACC,EAAD,EAAKZ,GAAL,KAAa;AAClB;AACA,QAAIC,OAAO,aAAMN,OAAN,cAAiBiB,EAAjB,CAAX,CAFkB,CAGlB;;AACA,UAAMV,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,0CAA2BH,GAA3B,CADK;AAEL,wBAAgB;AAFX;AADE,KAAf,CAJkB,CAUlB;;AACA,WAAOP,KAAK,CAACW,GAAN,CAAUH,OAAV,EAAmBC,MAAnB,EACNG,IADM,CACDC,GAAG,IAAI,IAAIZ,IAAJ,CAASY,GAAG,CAACC,IAAJ,CAASM,MAAlB,CADN,CAAP;AAEH,GApCU;;AAsCX;;;;;AAKAC,EAAAA,QAAQ,EAAE,CAACC,IAAD,EAAOf,GAAP,KAAe;AACrB;AACA,UAAMC,OAAO,aAAMN,OAAN,cAAiBoB,IAAjB,CAAb,CAFqB,CAGrB;;AACA,UAAMb,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,0CAA2BH,GAA3B,CADK;AAEL,wBAAgB;AAFX;AADE,KAAf,CAJqB,CAUrB;;AACA,WAAOP,KAAK,CAACuB,IAAN,CAAWf,OAAX,EAAoBC,MAApB,EACNG,IADM,CACDC,GAAG,IAAI,IAAIZ,IAAJ,CAASY,GAAG,CAACC,IAAJ,CAASM,MAAlB,CADN,CAAP;AAEH;AAxDU,CAAf","sourcesContent":["// NPM Modules\nimport Axios from 'axios';\n// Material UI\n// Own modules\nimport Chat from '../models/Chat';\n// Assets\n// CSS\n\n// Endpoint\nconst API_URL = `${process.env.REACT_APP_API_URL}/chats`;\n\n/**\n* Objeto API\n*/\nexport default {\n    \n    /**\n    * Obtener todos los chats\n    */\n    getChats: jwt => {\n        // Endpoint\n        let baseURL = `${API_URL}`;\n        // Config \n        const config = { \n            headers: { \n                'Authorization': `Bearer ${jwt}`,\n                'Content-Type': 'application/x-www-form-urlencoded' \n            } \n        }\n        // Call endpoint and return\n        return Axios.get(baseURL, config)\n        .then(res => res.data.results.map(chat => new Chat(chat)));\n    },\n    \n    /**\n    * Obtener toda la conversación de un chat\n    */\n    getChat: (id, jwt) => {\n        // Endpoint\n        let baseURL = `${API_URL}/${id}`;\n        // Config \n        const config = { \n            headers: { \n                'Authorization': `Bearer ${jwt}`,\n                'Content-Type': 'application/x-www-form-urlencoded' \n            } \n        }\n        // Call endpoint and return\n        return Axios.get(baseURL, config)\n        .then(res => new Chat(res.data.result));\n    },\n    \n    /**\n    * Crear un nuevo chat\n    * @param {Advert} slug Advert slug to chat creation\n    * @param {Advert} jwt JWT for authentication\n    */\n    postChat: (slug, jwt) => {\n        // Endpoint\n        const baseURL = `${API_URL}/${slug}`;\n        // Config \n        const config = { \n            headers: { \n                'Authorization': `Bearer ${jwt}`,\n                'Content-Type': 'application/x-www-form-urlencoded' \n            } \n        }\n        // Call endpoint and return\n        return Axios.post(baseURL, config)\n        .then(res => new Chat(res.data.result));\n    },\n}"]},"metadata":{},"sourceType":"module"}