{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\src\\\\containers\\\\Chats\\\\Chats.js\";\n// NPM Modules\nimport React, { useEffect } from 'react'; // Material UI\n\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types'; // Components\n\nimport HeaderChat from '../../components/headers/HeaderChat';\nimport NoResults from '../../components/utils/NoResults';\nimport ChatList from '../../components/chat/ChatList';\nimport Footer from '../../components/layout/Footer';\nimport NavBar from '../../components/layout/NavBar';\nimport Error from '../../components/error/Error'; // Own modules\n// Models\n// Assets\n// CSS\n\nimport './styles.css'; // Chat adverts section\n\nexport default function Chats(props) {\n  // Destructure props\n  const fetchUserChats = props.fetchUserChats,\n        enqueueSnackbar = props.enqueueSnackbar,\n        t = props.t;\n  const chats = props.chats,\n        session = props.session,\n        socketIo = props.socketIo;\n  const _props$ui = props.ui,\n        isFetchingChats = _props$ui.isFetchingChats,\n        error = _props$ui.error;\n  useEffect(() => {\n    fetchUserChats().catch(error => enqueueSnackbar(t('Error loading chats ERROR', {\n      error\n    }), {\n      variant: 'error'\n    }));\n  }, [fetchUserChats, enqueueSnackbar, t]); // Render\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    session: session,\n    onLogout: props.logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Container, {\n    className: \"Container Container__Fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: \"Section__Wrapper Section__WrapperChats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(HeaderChat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), chats.length > 0 && React.createElement(ChatList, {\n    session: session,\n    chats: chats,\n    isLoading: isFetchingChats,\n    onlineUsers: socketIo.onlineUsers,\n    id: props.match.params.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), !chats.length && React.createElement(NoResults, {\n    text: t('No chats for your user MORE'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), props.error && React.createElement(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), !socketIo.online && React.createElement(\"div\", {\n    className: \"Chat__Reconnect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"Home__Subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, t('We are having problems while connecting to the chat server')), React.createElement(Button, {\n    className: \"Chat__ReconnectButton\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => props.connectSocket(session.login),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, t('Reconnect')))), React.createElement(Footer, {\n    session: session,\n    onLogout: props.logout,\n    active: \"Chats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n}\nChats.propTypes = {\n  chats: PropTypes.array.isRequired,\n  session: PropTypes.object.isRequired,\n  socketIo: PropTypes.object.isRequired,\n  error: PropTypes.string,\n  isFetchingChats: PropTypes.bool,\n  t: PropTypes.func.isRequired,\n  fetchUserChats: PropTypes.func.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\containers\\Chats\\Chats.js"],"names":["React","useEffect","Container","Button","PropTypes","HeaderChat","NoResults","ChatList","Footer","NavBar","Error","Chats","props","fetchUserChats","enqueueSnackbar","t","chats","session","socketIo","ui","isFetchingChats","error","catch","variant","logout","length","onlineUsers","match","params","id","online","connectSocket","login","propTypes","array","isRequired","object","string","bool","func"],"mappings":"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","sourcesContent":["// NPM Modules\nimport React, { useEffect } from 'react';\n// Material UI\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n// Components\nimport HeaderChat from '../../components/headers/HeaderChat';\nimport NoResults from '../../components/utils/NoResults';\nimport ChatList from '../../components/chat/ChatList';\nimport Footer from '../../components/layout/Footer';\nimport NavBar from '../../components/layout/NavBar';\nimport Error from '../../components/error/Error';\n// Own modules\n// Models\n// Assets\n// CSS\nimport './styles.css';\n\n// Chat adverts section\nexport default function Chats (props) {\n    \n    // Destructure props\n    const { fetchUserChats, enqueueSnackbar, t } = props;\n    const { chats, session, socketIo } = props;\n    const { isFetchingChats, error } = props.ui;\n\n    useEffect(() => {\n        fetchUserChats()\n        .catch (error => enqueueSnackbar(t('Error loading chats ERROR', {error}), { variant: 'error' }));\n    }, [fetchUserChats, enqueueSnackbar, t]);\n\n    // Render\n    return (\n        <React.Fragment>\n            <NavBar session={session} onLogout={props.logout}/>\n            <Container className='Container Container__Fixed'>\n                <main className='Section__Wrapper Section__WrapperChats'>\n                    <HeaderChat/>\n                    { chats.length > 0 &&\n                        <ChatList\n                            session={session}\n                            chats={chats}\n                            isLoading={isFetchingChats}\n                            onlineUsers={socketIo.onlineUsers}\n                            id={props.match.params.id}\n                        />\n                    }\n                    { !chats.length &&\n                        <NoResults text={t('No chats for your user MORE')}/>\n                    }\n                </main>\n                { props.error && <Error error={error}/>}\n                { !socketIo.online && \n                    <div className='Chat__Reconnect'>\n                        <h2 className='Home__Subtitle'>{t('We are having problems while connecting to the chat server')}</h2>\n                        <Button className='Chat__ReconnectButton' variant='contained' color='primary'\n                                onClick={()=>props.connectSocket(session.login)}>\n                                {t('Reconnect')}\n                        </Button>\n                    </div>\n                }\n            </Container>\n            <Footer session={session} onLogout={props.logout} active='Chats'/>\n        </React.Fragment>\n    );\n}\n\nChats.propTypes = {\n    chats: PropTypes.array.isRequired,\n    session: PropTypes.object.isRequired,\n    socketIo: PropTypes.object.isRequired,\n    error: PropTypes.string,\n    isFetchingChats: PropTypes.bool,\n    t: PropTypes.func.isRequired,\n    fetchUserChats: PropTypes.func.isRequired,\n    enqueueSnackbar: PropTypes.func.isRequired,\n}"]},"metadata":{},"sourceType":"module"}