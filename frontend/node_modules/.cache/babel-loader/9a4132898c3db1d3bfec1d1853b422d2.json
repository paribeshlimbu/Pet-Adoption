{"ast":null,"code":"// NPM Modules\nimport Axios from 'axios';\nimport Querystring from 'querystring'; // Material UI\n// Own modules\n// Models\n\nimport Advert from '../models/Advert';\nimport Session from '../models/Session'; // Assets\n// CSS\n// Endpoint\n\nconst API_URL = \"\".concat(process.env.REACT_APP_API_URL, \"/user\");\n/**\n* Objeto API\n*/\n\nexport default {\n  /**\n  * Create a new user\n  */\n  create: (login, name, email, password) => {\n    // Endpoint\n    let baseURL = \"\".concat(API_URL); // Call endpoint and return\n\n    return Axios.post(baseURL, Querystring.stringify({\n      login,\n      name,\n      email,\n      password\n    }), {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(res => res);\n  },\n\n  /**\n  * Editar los datos de un usuario\n  */\n  edit: async (user, jwt) => {\n    // Endpoint\n    const baseURL = \"\".concat(API_URL); // Form Data\n\n    const formData = new FormData();\n    formData.append('login', user.login);\n    formData.append('name', user.name);\n    formData.append('email', user.email);\n    if (user.password) formData.append('password', user.password);\n    if (user.file) formData.append('photoFile', user.file); // Config \n\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \".concat(jwt),\n        'Content-Type': 'multipart/form-data'\n      }\n    }; // Call endpoint and return\n\n    return Axios.put(baseURL, formData, config).then(res => new Session(res.data.user));\n  },\n\n  /**\n  * Editar los datos de un usuario\n  */\n  delete: async (id, jwt) => {\n    // Endpoint\n    const baseURL = \"\".concat(API_URL, \"/\").concat(id); // Config \n\n    const config = {\n      headers: {\n        'Authorization': \"Bearer \".concat(jwt)\n      }\n    }; // Call endpoint and return\n\n    Axios.delete(baseURL, config).then(res => res.data);\n  },\n\n  /**\n  * Llama a la API para insertar/eliminar un anuncio a favoritos\n  * @param {Advert} slug Slug del anuncio del que quiero añadir/quitar de favorito\n  * @param {String} jwt Token para autenticar en el API\n  */\n  setFavorite: (slug, jwt) => {\n    // Endpoint\n    const baseURL = \"\".concat(API_URL, \"/favorites/\").concat(slug); // Call endpoint and return\n\n    return Axios.put(baseURL, {\n      headers: {\n        'Authorization': \"Bearer \".concat(jwt)\n      }\n    }).then(res => {\n      return {\n        advert: res.data.advert,\n        favorite: res.data.favorite\n      };\n    });\n  },\n\n  /**\n  * Get favorite adverts for the user\n  */\n  getFavorites: jwt => {\n    // Endpoint\n    let baseURL = \"\".concat(API_URL, \"/favorites\"); // Call endpoint and return\n\n    return Axios.get(baseURL, {\n      headers: {\n        'Authorization': \"Bearer \".concat(jwt)\n      }\n    }).then(res => {\n      const adverts = res.data.results.map(ad => {\n        ad.favorite = true;\n        return new Advert(ad);\n      });\n      return {\n        start: 0,\n        end: adverts.length - 1,\n        totalCount: adverts.length,\n        adverts: adverts\n      };\n    });\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Administrator\\Downloads\\keepcoding-wallaclone-master\\frontend\\src\\services\\UserServices.js"],"names":["Axios","Querystring","Advert","Session","API_URL","process","env","REACT_APP_API_URL","create","login","name","email","password","baseURL","post","stringify","headers","then","res","edit","user","jwt","formData","FormData","append","file","config","put","data","delete","id","setFavorite","slug","advert","favorite","getFavorites","get","adverts","results","map","ad","start","end","length","totalCount"],"mappings":"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","sourcesContent":["// NPM Modules\nimport Axios from 'axios';\nimport Querystring from 'querystring';\n// Material UI\n// Own modules\n// Models\nimport Advert from '../models/Advert';\nimport Session from '../models/Session';\n// Assets\n// CSS\n\n// Endpoint\nconst API_URL = `${process.env.REACT_APP_API_URL}/user`;\n\n\n/**\n* Objeto API\n*/\nexport default {\n    \n    /**\n    * Create a new user\n    */\n    create: (login, name, email, password) => {\n        // Endpoint\n        let baseURL = `${API_URL}`;\n        // Call endpoint and return\n        return Axios.post(\n            baseURL, \n            Querystring.stringify({login, name, email, password }),\n            { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n        )\n        .then(res => res);\n    },\n        \n    /**\n    * Editar los datos de un usuario\n    */\n    edit: async (user, jwt) => {\n        // Endpoint\n        const baseURL = `${API_URL}`;\n        // Form Data\n        const formData = new FormData();\n        formData.append('login', user.login);\n        formData.append('name', user.name);\n        formData.append('email', user.email);\n        if (user.password) formData.append('password', user.password);\n        if (user.file) formData.append('photoFile', user.file);\n        // Config \n        const config = {\n            headers: { \n                'Authorization': `Bearer ${jwt}`,\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n        // Call endpoint and return\n        return Axios.put( baseURL, formData, config )\n        .then(res => new Session(res.data.user))\n    },\n\n    /**\n    * Editar los datos de un usuario\n    */\n   delete: async (id, jwt) => {\n        // Endpoint\n        const baseURL = `${API_URL}/${id}`;\n        // Config \n        const config = { headers: { 'Authorization': `Bearer ${jwt}`, } };\n        // Call endpoint and return\n        Axios.delete( baseURL, config )\n        .then(res => res.data)\n    },\n        \n    /**\n    * Llama a la API para insertar/eliminar un anuncio a favoritos\n    * @param {Advert} slug Slug del anuncio del que quiero añadir/quitar de favorito\n    * @param {String} jwt Token para autenticar en el API\n    */\n    setFavorite: (slug, jwt) => {\n        // Endpoint\n        const baseURL = `${API_URL}/favorites/${slug}`;\n        // Call endpoint and return\n        return Axios.put(\n            baseURL, \n            { headers: { 'Authorization': `Bearer ${jwt}`} }\n        )\n        .then(res => {\n            return {\n                advert: res.data.advert,\n                favorite: res.data.favorite\n            }                \n        });\n    },\n        \n    /**\n    * Get favorite adverts for the user\n    */\n    getFavorites: (jwt) => {\n        // Endpoint\n        let baseURL = `${API_URL}/favorites`;\n        // Call endpoint and return\n        return Axios.get(\n            baseURL, \n            { headers: { 'Authorization': `Bearer ${jwt}`} }\n        )\n        .then(res => {\n            const adverts = res.data.results.map(ad => {\n                ad.favorite = true;\n                return new Advert(ad);\n            });\n            return {\n                start: 0,\n                end: adverts.length - 1,\n                totalCount: adverts.length,\n                adverts: adverts\n            }\n        });\n    },\n}"]},"metadata":{},"sourceType":"module"}