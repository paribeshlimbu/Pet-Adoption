{"ast":null,"code":"// Models\nimport User from './User'; // Constantes para el trabajo con el modelo de anuncio\n\nexport const ADVERT_CONSTANTS = {\n  STATUS: {\n    SOLD: 'sold',\n    BOOKED: 'booked'\n  },\n  TYPE: {\n    ALL: 'all',\n    BUY: 'buy',\n    SELL: 'sell'\n  },\n  TAG: {\n    ALL: 'all',\n    WORK: 'work',\n    LIFESTYLE: 'lifestyle',\n    MOTOR: 'motor',\n    MOBILE: 'mobile'\n  }\n}; // Empty advert aux\n\nexport const EMPTY_ADVERT = {\n  _id: '',\n  slug: '',\n  name: '',\n  description: '',\n  price: 0,\n  type: ADVERT_CONSTANTS.TYPE.BUY,\n  photo: '',\n  thumbnail: '',\n  booked: false,\n  sold: false,\n  favorite: false,\n  createdAt: undefined,\n  updatedAt: undefined\n}; // Endpoint\n\nconst API_URL = process.env.REACT_APP_API_URL.replace('/apiv1', '');\n/**\n * Modelo de anuncio en wallaclone\n */\n\nexport default class Advert {\n  /**\n   * Constructor\n   * @param {Object} Advert \n   */\n  constructor(ad) {\n    this._id = ad._id;\n    this.slug = ad.slug;\n    this.createdAt = ad.createdAt;\n    this.updatedAt = ad.updatedAt;\n    this.name = ad.name;\n    this.description = ad.description;\n    this.price = ad.price;\n    this.type = ad.type;\n    this.photo = ad.photo.startsWith('/images/') ? \"\".concat(API_URL).concat(ad.photo) : ad.photo;\n\n    if (ad.thumbnail) {\n      this.thumbnail = ad.thumbnail.startsWith('/images/') ? \"\".concat(API_URL).concat(ad.thumbnail) : ad.thumbnail;\n    }\n\n    this.tags = ad.tags;\n    this.booked = ad.booked;\n    this.sold = ad.sold;\n\n    if (ad.user) {\n      this.user = new User(ad.user);\n    }\n\n    this.file = ad.file;\n    this.favorite = ad.favorite;\n  }\n  /**\n   * Comprueba si un objeto advert es válido. (Campos obligatorios completos)\n   */\n\n\n  isValid() {\n    return this.name && this.description && this.price > 0 && this.type && this.tags && this.tags.length >= 1;\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\models\\Advert.js"],"names":["User","ADVERT_CONSTANTS","STATUS","SOLD","BOOKED","TYPE","ALL","BUY","SELL","TAG","WORK","LIFESTYLE","MOTOR","MOBILE","EMPTY_ADVERT","_id","slug","name","description","price","type","photo","thumbnail","booked","sold","favorite","createdAt","undefined","updatedAt","API_URL","process","env","REACT_APP_API_URL","replace","Advert","constructor","ad","startsWith","tags","user","file","isValid","length"],"mappings":"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","sourcesContent":["// Models\nimport User from './User';\n\n// Constantes para el trabajo con el modelo de anuncio\nexport const ADVERT_CONSTANTS = {\n    STATUS: {\n        SOLD: 'sold',\n        BOOKED: 'booked'\n    },\n    TYPE: {\n        ALL: 'all',\n        BUY: 'buy',\n        SELL: 'sell'\n    }, \n    TAG: {\n        ALL: 'all',\n        WORK: 'work', \n        LIFESTYLE: 'lifestyle', \n        MOTOR: 'motor', \n        MOBILE: 'mobile'\n    }\n}\n\n// Empty advert aux\nexport const EMPTY_ADVERT = {\n    _id: '',\n    slug: '',\n    name: '',\n    description: '',\n    price: 0,\n    type: ADVERT_CONSTANTS.TYPE.BUY,\n    photo: '',\n    thumbnail: '',\n    booked: false,\n    sold: false,\n    favorite: false,\n    createdAt: undefined,\n    updatedAt: undefined\n}\n\n// Endpoint\nconst API_URL = process.env.REACT_APP_API_URL.replace('/apiv1','');\n\n/**\n * Modelo de anuncio en wallaclone\n */\nexport default class Advert {\n    \n    /**\n     * Constructor\n     * @param {Object} Advert \n     */    \n    constructor(ad) {\n        this._id = ad._id;\n        this.slug = ad.slug;\n        this.createdAt = ad.createdAt;\n        this.updatedAt = ad.updatedAt;\n        this.name = ad.name;\n        this.description = ad.description;\n        this.price = ad.price;\n        this.type = ad.type;\n        this.photo = ad.photo.startsWith('/images/')?`${API_URL}${ad.photo}`:ad.photo;\n        if (ad.thumbnail) {\n            this.thumbnail = ad.thumbnail.startsWith('/images/')?`${API_URL}${ad.thumbnail}`:ad.thumbnail;\n        }\n        this.tags = ad.tags;\n        this.booked = ad.booked;\n        this.sold = ad.sold;\n        if (ad.user) {\n            this.user = new User(ad.user);\n        }        \n        this.file = ad.file;\n        this.favorite = ad.favorite;\n    }\n\n    /**\n     * Comprueba si un objeto advert es válido. (Campos obligatorios completos)\n     */\n    isValid() {\n        return  this.name && \n                this.description && \n                this.price > 0 && \n                this.type && \n                this.tags && \n                this.tags.length >= 1;\n    }\n}"]},"metadata":{},"sourceType":"module"}