{"ast":null,"code":"// Node modules\nimport { withSnackbar } from 'notistack';\nimport { connect } from 'react-redux'; // Own components\n\nimport Reset from './Reset'; // Own modules\n\nimport { SessionActions } from '../../store/GlobalActions';\n/**\n * Inyecta props en mi componente para acceder al state del store\n * @param {Object} state Estado de mi store\n */\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticating: state.ui.isAuthenticating\n  };\n};\n/**\n * Inyecta props en mi componente para acceder a los reducers del store\n * @param {Function} dispatch Dispatch del store\n */\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    resetAccount: (token, password) => dispatch(SessionActions.resetAccount(token, password))\n  };\n}; // Retorno el componente envuelto en el \"connect\", y en un withSnackBar (para los tags de info de la app)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Reset));","map":{"version":3,"sources":["C:\\Users\\Administrator\\Downloads\\keepcoding-wallaclone-master\\frontend\\src\\containers\\Reset\\index.js"],"names":["withSnackbar","connect","Reset","SessionActions","mapStateToProps","state","isAuthenticating","ui","mapDispatchToProps","dispatch","resetAccount","token","password"],"mappings":"AAAA;AACA,SAASA,YAAT,QAA6B,WAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA;;;;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,gBAAgB,EAAED,KAAK,CAACE,EAAN,CAASD;AADxB,GAAP;AAGH,CAJD;AAMA;;;;;;AAIA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqBH,QAAQ,CAACN,cAAc,CAACO,YAAf,CAA4BC,KAA5B,EAAmCC,QAAnC,CAAD;AADxC,GAAP;AAGH,CAJD,C,CAMA;;;AACA,eAAeX,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CR,YAAY,CAACE,KAAD,CAAzD,CAAf","sourcesContent":["// Node modules\nimport { withSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\n// Own components\nimport Reset from './Reset';\n// Own modules\nimport { SessionActions } from '../../store/GlobalActions';\n\n/**\n * Inyecta props en mi componente para acceder al state del store\n * @param {Object} state Estado de mi store\n */\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticating: state.ui.isAuthenticating,\n    }\n}\n\n/**\n * Inyecta props en mi componente para acceder a los reducers del store\n * @param {Function} dispatch Dispatch del store\n */\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        resetAccount: (token, password) => dispatch(SessionActions.resetAccount(token, password)),\n    }\n}\n\n// Retorno el componente envuelto en el \"connect\", y en un withSnackBar (para los tags de info de la app)\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Reset));"]},"metadata":{},"sourceType":"module"}