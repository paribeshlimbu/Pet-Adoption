{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\src\\\\components\\\\adverts\\\\AdvertList\\\\AdvertList.js\";\n// NPM Modules\nimport React from 'react';\nimport PropTypes from 'prop-types'; // Material UI\n// Own Components\n\nimport NoResults from '../../utils/NoResults';\nimport CardList from '../../cards/CardList';\nimport CardTile from '../../cards/CardTile';\nimport Loading from '../../utils/Loading'; // Own modules\n// Models\n// Asset\n// CSS\n\nimport './styles.css'; // Dinamic render\n\nconst CARD_TYPES = {\n  tiles: CardTile,\n  list: CardList\n}; // Component to display an advert list (tiles o list mode)\n\nexport default function AdvertList(props) {\n  // Translate\n  const onBookAdvert = props.onBookAdvert,\n        onSellAdvert = props.onSellAdvert,\n        onDeleteAdvert = props.onDeleteAdvert,\n        onFavoriteAdvert = props.onFavoriteAdvert,\n        onOpenChat = props.onOpenChat,\n        onEditAdvert = props.onEditAdvert,\n        t = props.t;\n  const session = props.session,\n        adverts = props.adverts,\n        type = props.type,\n        isLoading = props.isLoading; // Type of card to render\n\n  const Card = CARD_TYPES[type];\n  return React.createElement(\"section\", {\n    className: \"\".concat(type === 'tiles' ? 'AdvertListTiles' : 'AdvertListDetail'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, !isLoading && adverts.length > 0 && adverts.map((advert, index) => React.createElement(Card, {\n    key: index,\n    advert: advert,\n    isLogin: session._id !== undefined,\n    isMyAdvert: session._id === advert.user._id,\n    onBookAdvert: onBookAdvert,\n    onSellAdvert: onSellAdvert,\n    onDeleteAdvert: onDeleteAdvert,\n    onFavoriteAdvert: onFavoriteAdvert,\n    onOpenChat: onOpenChat,\n    onEditAdvert: onEditAdvert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), !isLoading && !adverts.length && React.createElement(NoResults, {\n    text: t('Sorry, we couldn\\'t find any results matching the filter criteria'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), isLoading && React.createElement(Loading, {\n    text: t('loading pets'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n}\nAdvertList.propTypes = {\n  session: PropTypes.object,\n  adverts: PropTypes.array.isRequired,\n  type: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  onBookAdvert: PropTypes.func,\n  onSellAdvert: PropTypes.func,\n  onDeleteAdvert: PropTypes.func,\n  onFavoriteAdvert: PropTypes.func,\n  onOpenChat: PropTypes.func,\n  onEditAdvert: PropTypes.func,\n  t: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\components\\adverts\\AdvertList\\AdvertList.js"],"names":["React","PropTypes","NoResults","CardList","CardTile","Loading","CARD_TYPES","tiles","list","AdvertList","props","onBookAdvert","onSellAdvert","onDeleteAdvert","onFavoriteAdvert","onOpenChat","onEditAdvert","t","session","adverts","type","isLoading","Card","length","map","advert","index","_id","undefined","user","propTypes","object","array","isRequired","string","bool","func"],"mappings":"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","sourcesContent":["// NPM Modules\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// Material UI\n// Own Components\nimport NoResults from '../../utils/NoResults';\nimport CardList from '../../cards/CardList';\nimport CardTile from '../../cards/CardTile';\nimport Loading from '../../utils/Loading';\n// Own modules\n// Models\n// Asset\n// CSS\nimport './styles.css';\n\n// Dinamic render\nconst CARD_TYPES = {\n    tiles: CardTile,\n    list: CardList\n};\n\n// Component to display an advert list (tiles o list mode)\nexport default function AdvertList (props) {\n    \n    // Translate\n    const { onBookAdvert, onSellAdvert, onDeleteAdvert, onFavoriteAdvert, onOpenChat, onEditAdvert, t } = props;\n    const { session, adverts, type, isLoading } = props;\n\n    // Type of card to render\n    const Card = CARD_TYPES[type];\n    return(\n        <section className={`${type==='tiles'?'AdvertListTiles':'AdvertListDetail'}`}>\n            {   !isLoading && \n                adverts.length > 0 &&\n                adverts.map((advert, index) => \n                    <Card   key={index}\n                            advert={advert} \n                            isLogin={session._id !== undefined}\n                            isMyAdvert={session._id === advert.user._id }\n                            onBookAdvert={onBookAdvert}\n                            onSellAdvert={onSellAdvert}\n                            onDeleteAdvert={onDeleteAdvert}\n                            onFavoriteAdvert={onFavoriteAdvert}\n                            onOpenChat={onOpenChat}\n                            onEditAdvert={onEditAdvert}\n                    />\n            )}\n            { !isLoading && !adverts.length && <NoResults text={t('Sorry, we couldn\\'t find any results matching the filter criteria')}/> }\n            { isLoading && <Loading text={t('loading pets')}/> }\n        </section>\n    );\n}\n\nAdvertList.propTypes = {\n    session: PropTypes.object,\n    adverts: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired,\n    isLoading: PropTypes.bool,\n    onBookAdvert: PropTypes.func, \n    onSellAdvert: PropTypes.func, \n    onDeleteAdvert: PropTypes.func, \n    onFavoriteAdvert: PropTypes.func, \n    onOpenChat: PropTypes.func, \n    onEditAdvert: PropTypes.func,\n    t: PropTypes.func.isRequired,\n}"]},"metadata":{},"sourceType":"module"}