{"ast":null,"code":"// Node modules\nimport { connect } from 'react-redux';\nimport { withSnackbar } from 'notistack';\nimport { withNamespaces } from 'react-i18next'; // Own Components\n\nimport Home from './Home'; // Own modules\n\nimport { AdvertsActions, SessionActions, FiltersActions, ChatActions } from '../../store/GlobalActions';\nimport { getVisibleAdverts } from '../../store/selectors/AdvertsSelectors';\n/**\n * @param {Object} state E\n */\n\nconst mapStateToProps = state => {\n  return {\n    adverts: getVisibleAdverts(state.adverts, state.filters),\n    session: state.session,\n    chats: state.chats,\n    tags: state.tags,\n    ui: state.ui,\n    filters: state.filters,\n    lastCall: state.lastCall\n  };\n};\n/**\n * @param {Function} dispatch \n */\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // Session\n    logout: () => dispatch(SessionActions.logout()),\n    setFavorite: slug => dispatch(SessionActions.setFavorite(slug)),\n    // Filters\n    setFilters: filters => dispatch(FiltersActions.setFilters(filters)),\n    resetFilters: () => dispatch(FiltersActions.resetFilters()),\n    setCurrentPage: pageNumber => dispatch(FiltersActions.setCurrentPage(pageNumber)),\n    // Adverts\n    fetchTags: () => dispatch(AdvertsActions.fetchTags()),\n    fetchAdverts: () => dispatch(AdvertsActions.fetchAdverts()),\n    fetchIterateAdverts: direction => dispatch(AdvertsActions.fetchIterateAdverts(direction)),\n    searchAdverts: filters => dispatch(AdvertsActions.searchAdverts(filters)),\n    // Chats\n    createChat: slug => dispatch(ChatActions.createChat(slug))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(withNamespaces()(Home)));","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\containers\\Home\\index.js"],"names":["connect","withSnackbar","withNamespaces","Home","AdvertsActions","SessionActions","FiltersActions","ChatActions","getVisibleAdverts","mapStateToProps","state","adverts","filters","session","chats","tags","ui","lastCall","mapDispatchToProps","dispatch","logout","setFavorite","slug","setFilters","resetFilters","setCurrentPage","pageNumber","fetchTags","fetchAdverts","fetchIterateAdverts","direction","searchAdverts","createChat"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,cAAzC,EAAyDC,WAAzD,QAA4E,2BAA5E;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AAGA;;;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAEH,iBAAiB,CAACE,KAAK,CAACC,OAAP,EAAgBD,KAAK,CAACE,OAAtB,CADvB;AAEHC,IAAAA,OAAO,EAAEH,KAAK,CAACG,OAFZ;AAGHC,IAAAA,KAAK,EAAEJ,KAAK,CAACI,KAHV;AAIHC,IAAAA,IAAI,EAAEL,KAAK,CAACK,IAJT;AAKHC,IAAAA,EAAE,EAAEN,KAAK,CAACM,EALP;AAMHJ,IAAAA,OAAO,EAAEF,KAAK,CAACE,OANZ;AAOHK,IAAAA,QAAQ,EAAEP,KAAK,CAACO;AAPb,GAAP;AASH,CAVD;AAYA;;;;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH;AACAC,IAAAA,MAAM,EAAE,MAAMD,QAAQ,CAACd,cAAc,CAACe,MAAf,EAAD,CAFnB;AAGHC,IAAAA,WAAW,EAAGC,IAAD,IAAUH,QAAQ,CAACd,cAAc,CAACgB,WAAf,CAA2BC,IAA3B,CAAD,CAH5B;AAIH;AACAC,IAAAA,UAAU,EAAEX,OAAO,IAAIO,QAAQ,CAACb,cAAc,CAACiB,UAAf,CAA0BX,OAA1B,CAAD,CAL5B;AAMHY,IAAAA,YAAY,EAAE,MAAML,QAAQ,CAACb,cAAc,CAACkB,YAAf,EAAD,CANzB;AAOHC,IAAAA,cAAc,EAAEC,UAAU,IAAIP,QAAQ,CAACb,cAAc,CAACmB,cAAf,CAA8BC,UAA9B,CAAD,CAPnC;AAQH;AACAC,IAAAA,SAAS,EAAE,MAAMR,QAAQ,CAACf,cAAc,CAACuB,SAAf,EAAD,CATtB;AAUHC,IAAAA,YAAY,EAAE,MAAMT,QAAQ,CAACf,cAAc,CAACwB,YAAf,EAAD,CAVzB;AAWHC,IAAAA,mBAAmB,EAAEC,SAAS,IAAIX,QAAQ,CAACf,cAAc,CAACyB,mBAAf,CAAmCC,SAAnC,CAAD,CAXvC;AAYHC,IAAAA,aAAa,EAAEnB,OAAO,IAAIO,QAAQ,CAACf,cAAc,CAAC2B,aAAf,CAA6BnB,OAA7B,CAAD,CAZ/B;AAaH;AACAoB,IAAAA,UAAU,EAAGV,IAAD,IAAUH,QAAQ,CAACZ,WAAW,CAACyB,UAAZ,CAAuBV,IAAvB,CAAD;AAd3B,GAAP;AAgBH,CAjBD;;AAmBA,eAAetB,OAAO,CAACS,eAAD,EAAkBS,kBAAlB,CAAP,CAA6CjB,YAAY,CAACC,cAAc,GAAGC,IAAH,CAAf,CAAzD,CAAf","sourcesContent":["// Node modules\nimport { connect } from 'react-redux';\nimport { withSnackbar } from 'notistack';\nimport { withNamespaces } from 'react-i18next';\n// Own Components\nimport Home from './Home';\n// Own modules\nimport { AdvertsActions, SessionActions, FiltersActions, ChatActions } from '../../store/GlobalActions';\nimport { getVisibleAdverts } from '../../store/selectors/AdvertsSelectors';\n\n\n/**\n * @param {Object} state E\n */\nconst mapStateToProps = (state) => {\n    return {\n        adverts: getVisibleAdverts(state.adverts, state.filters),\n        session: state.session,\n        chats: state.chats,\n        tags: state.tags,\n        ui: state.ui,\n        filters: state.filters,\n        lastCall: state.lastCall\n    }\n}\n\n/**\n * @param {Function} dispatch \n */\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // Session\n        logout: () => dispatch(SessionActions.logout()),\n        setFavorite: (slug) => dispatch(SessionActions.setFavorite(slug)),\n        // Filters\n        setFilters: filters => dispatch(FiltersActions.setFilters(filters)),\n        resetFilters: () => dispatch(FiltersActions.resetFilters()),\n        setCurrentPage: pageNumber => dispatch(FiltersActions.setCurrentPage(pageNumber)),\n        // Adverts\n        fetchTags: () => dispatch(AdvertsActions.fetchTags()),\n        fetchAdverts: () => dispatch(AdvertsActions.fetchAdverts()),\n        fetchIterateAdverts: direction => dispatch(AdvertsActions.fetchIterateAdverts(direction)),\n        searchAdverts: filters => dispatch(AdvertsActions.searchAdverts(filters)),\n        // Chats\n        createChat: (slug) => dispatch(ChatActions.createChat(slug)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(withNamespaces()(Home)));"]},"metadata":{},"sourceType":"module"}