{"ast":null,"code":"// Node modules\nimport { withSnackbar } from 'notistack';\nimport { connect } from 'react-redux'; // Own components\n\nimport Register from './Register'; // Own modules\n\nimport { SessionActions } from '../../store/GlobalActions';\n/**\n * Inyecta props en mi componente para acceder al state del store\n * @param {Object} state Estado de mi store\n */\n\nconst mapStateToProps = state => {\n  return {\n    isCreating: state.ui.isCreating\n  };\n};\n/**\n * Inyecta props en mi componente para acceder a los reducers del store\n * @param {Function} dispatch Dispatch del store\n */\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createAccount: (login, name, email, password) => dispatch(SessionActions.createAccount(login, name, email, password))\n  };\n}; // Retorno el componente envuelto en el \"connect\", y en un withSnackBar (para los tags de info de la app)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Register));","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\containers\\Register\\index.js"],"names":["withSnackbar","connect","Register","SessionActions","mapStateToProps","state","isCreating","ui","mapDispatchToProps","dispatch","createAccount","login","name","email","password"],"mappings":"AAAA;AACA,SAASA,YAAT,QAA6B,WAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA;;;;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,UAAU,EAAED,KAAK,CAACE,EAAN,CAASD;AADlB,GAAP;AAGH,CAJD;AAMA;;;;;;AAIA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,QAArB,KAAkCL,QAAQ,CAACN,cAAc,CAACO,aAAf,CAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,KAA1C,EAAiDC,QAAjD,CAAD;AADtD,GAAP;AAGH,CAJD,C,CAMA;;;AACA,eAAeb,OAAO,CAACG,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CR,YAAY,CAACE,QAAD,CAAzD,CAAf","sourcesContent":["// Node modules\nimport { withSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\n// Own components\nimport Register from './Register';\n// Own modules\nimport { SessionActions } from '../../store/GlobalActions';\n\n/**\n * Inyecta props en mi componente para acceder al state del store\n * @param {Object} state Estado de mi store\n */\nconst mapStateToProps = (state) => {\n    return {\n        isCreating: state.ui.isCreating,\n    }\n}\n\n/**\n * Inyecta props en mi componente para acceder a los reducers del store\n * @param {Function} dispatch Dispatch del store\n */\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createAccount: (login, name, email, password) => dispatch(SessionActions.createAccount(login, name, email, password)),\n    }\n}\n\n// Retorno el componente envuelto en el \"connect\", y en un withSnackBar (para los tags de info de la app)\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Register));"]},"metadata":{},"sourceType":"module"}