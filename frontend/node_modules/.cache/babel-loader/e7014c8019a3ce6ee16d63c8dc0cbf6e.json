{"ast":null,"code":"import { connect } from 'react-redux';\nimport { withSnackbar } from 'notistack'; // Own modules\n\nimport Profile from './Profile';\nimport { SessionActions } from '../../store/GlobalActions';\n/**\n * Inyecta props en mi componente para acceder al state del store\n * @param {Object} state Estado de mi store\n */\n\nconst mapStateToProps = state => {\n  return {\n    session: state.session,\n    isUpdating: state.ui.isUpdating,\n    error: state.ui.error\n  };\n};\n/**\n * Inyecta props en mi componente para acceder a los reducers del store\n * @param {Function} dispatch Dispatch del store\n */\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // Session\n    logout: () => dispatch(SessionActions.logout()),\n    editUser: user => dispatch(SessionActions.editUser(user)),\n    deleteAccount: id => dispatch(SessionActions.deleteAccount(id))\n  };\n}; // Retorno el componente envuelto en el \"connect\", y en un withSnackBar (para los tags de info de la app)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Profile));","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\containers\\Profile\\index.js"],"names":["connect","withSnackbar","Profile","SessionActions","mapStateToProps","state","session","isUpdating","ui","error","mapDispatchToProps","dispatch","logout","editUser","user","deleteAccount","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAGA;;;;;AAIA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADZ;AAEHC,IAAAA,UAAU,EAAEF,KAAK,CAACG,EAAN,CAASD,UAFlB;AAGHE,IAAAA,KAAK,EAAEJ,KAAK,CAACG,EAAN,CAASC;AAHb,GAAP;AAKH,CAND;AAQA;;;;;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH;AACAC,IAAAA,MAAM,EAAE,MAAMD,QAAQ,CAACR,cAAc,CAACS,MAAf,EAAD,CAFnB;AAGHC,IAAAA,QAAQ,EAAGC,IAAD,IAAUH,QAAQ,CAACR,cAAc,CAACU,QAAf,CAAwBC,IAAxB,CAAD,CAHzB;AAIHC,IAAAA,aAAa,EAAGC,EAAD,IAAQL,QAAQ,CAACR,cAAc,CAACY,aAAf,CAA6BC,EAA7B,CAAD;AAJ5B,GAAP;AAMH,CAPD,C,CASA;;;AACA,eAAehB,OAAO,CAACI,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CT,YAAY,CAACC,OAAD,CAAzD,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { withSnackbar } from 'notistack';\n// Own modules\nimport Profile from './Profile';\nimport { SessionActions } from '../../store/GlobalActions';\n\n\n/**\n * Inyecta props en mi componente para acceder al state del store\n * @param {Object} state Estado de mi store\n */\nconst mapStateToProps = (state) => {\n    return {\n        session: state.session,\n        isUpdating: state.ui.isUpdating,\n        error: state.ui.error,\n    }\n}\n\n/**\n * Inyecta props en mi componente para acceder a los reducers del store\n * @param {Function} dispatch Dispatch del store\n */\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // Session\n        logout: () => dispatch(SessionActions.logout()),\n        editUser: (user) => dispatch(SessionActions.editUser(user)),\n        deleteAccount: (id) => dispatch(SessionActions.deleteAccount(id)),\n    }\n}\n\n// Retorno el componente envuelto en el \"connect\", y en un withSnackBar (para los tags de info de la app)\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Profile));"]},"metadata":{},"sourceType":"module"}