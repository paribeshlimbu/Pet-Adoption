{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\src\\\\containers\\\\Profile\\\\Profile.js\";\n// NPM Modules\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next'; // Material UI\n\nimport Container from '@material-ui/core/Container'; // Components\n\nimport HeaderProfile from '../../components/headers/HeaderProfile';\nimport ModalConfirm from '../../components/modals/ModalConfirm';\nimport ProfileForm from '../../components/forms/ProfileForm';\nimport Loading from '../../components/utils/Loading';\nimport NavBar from '../../components/layout/NavBar';\nimport Footer from '../../components/layout/Footer'; // Models\n\nimport Session from '../../models/Session'; // Own modules\n// Assets\n// CSS\n\nimport './styles.css'; // Profile\n\nfunction Profile(props) {\n  // Translate \n  const t = props.t; // Delete account\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showModalDelete = _useState2[0],\n        setShowModalDelete = _useState2[1];\n\n  const requestDeleteAccount = () => setShowModalDelete(true);\n\n  const cancelDeleteAccount = () => setShowModalDelete(false);\n\n  const confirmDeleteAccount = () => {\n    setShowModalDelete(false);\n    props.deleteAccount(props.session._id).then(res => props.enqueueSnackbar(t('Your account and all its related data is deleted'), {\n      variant: 'success'\n    })).catch(error => props.enqueueSnackbar(t('Error deleting account ERROR', {\n      error\n    }), {\n      variant: 'error'\n    }));\n  }; // Submit (save data)\n\n\n  const submitProfile = inputs => {\n    const password_old = inputs.password_old,\n          password_new_1 = inputs.password_new_1,\n          password_new_2 = inputs.password_new_2;\n    const user = new Session(inputs);\n\n    if (password_new_1 || password_new_2) {\n      if (password_new_1 !== password_new_2) return props.enqueueSnackbar(t('Error. Both passwords should match'), {\n        variant: 'error'\n      });\n      if (password_old === '') return props.enqueueSnackbar(t('You should enter your current password to change it'), {\n        variant: 'error'\n      });\n      user.password = password_new_1;\n    } // Dispatch update user\n\n\n    props.editUser(user).then(res => props.enqueueSnackbar(t('User updated successfully'), {\n      variant: 'success'\n    })).catch(error => props.enqueueSnackbar(t('Error updating user data ERROR', {\n      error\n    }), {\n      variant: 'error'\n    }));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    session: props.session,\n    onLogout: props.logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Container, {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: \"Section__Wrapper Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(HeaderProfile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(ProfileForm, {\n    noValidate: true,\n    autoComplete: \"off\",\n    className: \"Profile__Form\",\n    user: props.session,\n    onSubmit: submitProfile,\n    onRequestDeleteAccount: requestDeleteAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), props.isUpdating && React.createElement(Loading, {\n    text: t('Updating user data...'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), showModalDelete && React.createElement(ModalConfirm, {\n    onConfirm: confirmDeleteAccount,\n    onCancel: cancelDeleteAccount,\n    visible: true,\n    type: \"warning\",\n    title: t('Are you sure you want to delete your account?'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    session: props.session,\n    onLogout: props.logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}\n\nProfile.propTypes = {\n  tags: PropTypes.array,\n  session: PropTypes.object,\n  editSession: PropTypes.func,\n  logout: PropTypes.func\n};\nexport default withNamespaces()(Profile);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\containers\\Profile\\Profile.js"],"names":["React","useState","PropTypes","withNamespaces","Container","HeaderProfile","ModalConfirm","ProfileForm","Loading","NavBar","Footer","Session","Profile","props","t","showModalDelete","setShowModalDelete","requestDeleteAccount","cancelDeleteAccount","confirmDeleteAccount","deleteAccount","session","_id","then","res","enqueueSnackbar","variant","catch","error","submitProfile","inputs","password_old","password_new_1","password_new_2","user","password","editUser","logout","isUpdating","propTypes","tags","array","object","editSession","func"],"mappings":"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","sourcesContent":["// NPM Modules\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withNamespaces } from 'react-i18next';\n// Material UI\nimport Container from '@material-ui/core/Container';\n// Components\nimport HeaderProfile from '../../components/headers/HeaderProfile';\nimport ModalConfirm from '../../components/modals/ModalConfirm';\nimport ProfileForm from '../../components/forms/ProfileForm';\nimport Loading from '../../components/utils/Loading';\nimport NavBar from '../../components/layout/NavBar';\nimport Footer from '../../components/layout/Footer';\n// Models\nimport Session from '../../models/Session';\n// Own modules\n// Assets\n// CSS\nimport './styles.css';\n\n// Profile\nfunction Profile(props) {\n\n    // Translate \n    const { t } = props;\n\n    // Delete account\n    const [showModalDelete, setShowModalDelete] = useState(false);\n    const requestDeleteAccount = () => setShowModalDelete(true);\n    const cancelDeleteAccount = () => setShowModalDelete(false);\n    const confirmDeleteAccount = () => {\n        setShowModalDelete(false);\n        props.deleteAccount(props.session._id)\n        .then(res => props.enqueueSnackbar(t('Your account and all its related data is deleted'), { variant: 'success', }))\n        .catch(error => props.enqueueSnackbar(t('Error deleting account ERROR', {error}), { variant: 'error', }));\n    };\n     \n    // Submit (save data)\n    const submitProfile = (inputs) => {\n      const { password_old, password_new_1, password_new_2 } = inputs;\n      const user = new Session(inputs);\n      if (password_new_1 || password_new_2) {\n        if (password_new_1 !== password_new_2) return props.enqueueSnackbar(t('Error. Both passwords should match'), { variant: 'error' });        \n        if (password_old === '') return props.enqueueSnackbar(t('You should enter your current password to change it'), { variant: 'error' });        \n        user.password = password_new_1;\n      }\n      // Dispatch update user\n      props.editUser(user)\n        .then (res => props.enqueueSnackbar(t('User updated successfully'), { variant: 'success' }))\n        .catch (error => props.enqueueSnackbar(t('Error updating user data ERROR', {error}), { variant: 'error', }));\n    }\n\n    return (\n        <React.Fragment>\n        <NavBar session={props.session} onLogout={props.logout}/>\n        <Container className='Container'>\n            <main className='Section__Wrapper Profile'>\n                <HeaderProfile/>\n                <ProfileForm    noValidate \n                                autoComplete='off' \n                                className='Profile__Form'\n                                user={props.session}\n                                onSubmit={submitProfile} \n                                onRequestDeleteAccount={requestDeleteAccount}/>\n                { props.isUpdating &&\n                    <Loading text={t('Updating user data...')}/> \n                }\n                { showModalDelete && \n                    <ModalConfirm   onConfirm={confirmDeleteAccount} \n                                    onCancel={cancelDeleteAccount} \n                                    visible={true} type='warning'\n                                    title={t('Are you sure you want to delete your account?')}\n                    /> \n                }\n            </main>\n        </Container>\n        <Footer session={props.session} onLogout={props.logout}/>\n        </React.Fragment>\n    );\n}\n\nProfile.propTypes = {\n  tags: PropTypes.array,\n  session: PropTypes.object,\n  editSession: PropTypes.func,\n  logout: PropTypes.func\n}\n\nexport default withNamespaces()(Profile);"]},"metadata":{},"sourceType":"module"}