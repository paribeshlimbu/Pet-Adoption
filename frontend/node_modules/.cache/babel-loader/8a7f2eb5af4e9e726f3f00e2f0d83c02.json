{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\src\\\\components\\\\forms\\\\SelectForm\\\\SelectForm.js\";\n// NPM Modules\nimport React, { useContext } from 'react'; // Material UI\n\nimport { Select, FormControl, MenuItem, InputLabel } from '@material-ui/core'; // Models\n// Own components\n\nimport AdvertChip from '../../adverts/AdvertChip'; // Own modules\n\nimport { Context } from '../Form'; // CSS\n// Componente reutilizable de tipo Input (usando material)\n\nexport default function SelectForm(props) {\n  // Uso del contexto que envuelve al HOC del formulario\n  const context = useContext(Context); // Render\n\n  return React.createElement(FormControl, {\n    className: \"InputForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.label && React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.label), React.createElement(Select, {\n    name: props.name,\n    value: context.inputs[props.name],\n    onChange: context.handleInputChange,\n    className: \"SearchPanel__Type\",\n    required: props.required,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.options.map(option => React.createElement(MenuItem, {\n    key: option,\n    value: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(AdvertChip, {\n    type: props.chip,\n    value: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\components\\forms\\SelectForm\\SelectForm.js"],"names":["React","useContext","Select","FormControl","MenuItem","InputLabel","AdvertChip","Context","SelectForm","props","context","label","name","inputs","handleInputChange","required","options","map","option","chip"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,QAA9B,EAAwCC,UAAxC,QAA0D,mBAA1D,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,SAASC,OAAT,QAAwB,SAAxB,C,CACA;AAGA;;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC;AACA,QAAMC,OAAO,GAAGT,UAAU,CAACM,OAAD,CAA1B,CAHsC,CAKtC;;AACA,SACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACME,KAAK,CAACE,KAAN,IAAe,oBAAC,UAAD;AAAY,IAAA,MAAM,MAAlB;AAAmB,IAAA,OAAO,EAAEF,KAAK,CAACG,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCH,KAAK,CAACE,KAA/C,CADrB,EAEI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAEF,KAAK,CAACG,IADhB;AAEI,IAAA,KAAK,EAAEF,OAAO,CAACG,MAAR,CAAeJ,KAAK,CAACG,IAArB,CAFX;AAGI,IAAA,QAAQ,EAAEF,OAAO,CAACI,iBAHtB;AAII,IAAA,SAAS,EAAC,mBAJd;AAKI,IAAA,QAAQ,EAAEL,KAAK,CAACM,QALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOMN,KAAK,CAACO,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACtB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAf;AAAuB,IAAA,KAAK,EAAEA,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAET,KAAK,CAACU,IAAxB;AAA8B,IAAA,KAAK,EAAED,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,CAPN,CAFJ,CADJ;AAkBH","sourcesContent":["// NPM Modules\nimport React, { useContext } from 'react';\n// Material UI\nimport { Select, FormControl, MenuItem, InputLabel } from '@material-ui/core';\n// Models\n// Own components\nimport AdvertChip from '../../adverts/AdvertChip';\n// Own modules\nimport { Context } from '../Form';\n// CSS\n\n\n// Componente reutilizable de tipo Input (usando material)\nexport default function SelectForm(props) {\n\n    // Uso del contexto que envuelve al HOC del formulario\n    const context = useContext(Context);\n\n    // Render\n    return (\n        <FormControl className='InputForm'>\n            { props.label && <InputLabel shrink htmlFor={props.name}>{props.label}</InputLabel> }\n            <Select\n                name={props.name}\n                value={context.inputs[props.name]}\n                onChange={context.handleInputChange}\n                className='SearchPanel__Type'\n                required={props.required}\n            >\n                { props.options.map(option => \n                    <MenuItem key={option} value={option}>\n                        <AdvertChip type={props.chip} value={option}/>\n                    </MenuItem>) \n                }\n            </Select>\n        </FormControl>\n    )\n}"]},"metadata":{},"sourceType":"module"}