{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\keepcoding-wallaclone-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n// NPM Modules\nimport React from 'react';\n\nconst HideOnScrollDown = () => {\n  // Variables\n  const prevScrollY = React.useRef();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        hide = _React$useState2[0],\n        setHide = _React$useState2[1]; // Hook\n\n\n  React.useEffect(() => {\n    // When scrolling\n    const onScroll = () => {\n      setHide(hide => {\n        const scrolledDown = window.scrollY > prevScrollY.current;\n        if (window.scrollY < 100) return false;else if (scrolledDown && !hide) return true;else if (!scrolledDown && hide) return false;else {\n          prevScrollY.current = window.scrollY;\n          return hide;\n        }\n      });\n    }; // Listeners \n\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, []);\n  return hide;\n};\n\nexport default HideOnScrollDown;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Downloads\\keepcoding-wallaclone-master\\frontend\\src\\components\\utils\\HideOnScrollDown\\HideOnScrollDown.js"],"names":["React","HideOnScrollDown","prevScrollY","useRef","useState","hide","setHide","useEffect","onScroll","scrolledDown","window","scrollY","current","addEventListener","removeEventListener"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,EAApB;;AAF2B,0BAGHH,KAAK,CAACI,QAAN,CAAe,KAAf,CAHG;AAAA;AAAA,QAGpBC,IAHoB;AAAA,QAGdC,OAHc,wBAI3B;;;AACAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB;AACA,UAAMC,QAAQ,GAAG,MAAM;AACnBF,MAAAA,OAAO,CAACD,IAAI,IAAI;AACZ,cAAMI,YAAY,GAAGC,MAAM,CAACC,OAAP,GAAiBT,WAAW,CAACU,OAAlD;AACA,YAAIF,MAAM,CAACC,OAAP,GAAiB,GAArB,EAA0B,OAAO,KAAP,CAA1B,KACK,IAAIF,YAAY,IAAI,CAACJ,IAArB,EAA2B,OAAO,IAAP,CAA3B,KACA,IAAI,CAACI,YAAD,IAAiBJ,IAArB,EAA2B,OAAO,KAAP,CAA3B,KACA;AACDH,UAAAA,WAAW,CAACU,OAAZ,GAAsBF,MAAM,CAACC,OAA7B;AACA,iBAAON,IAAP;AACH;AACJ,OATM,CAAP;AAUH,KAXD,CAFkB,CAclB;;;AACAK,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC;AACA,WAAO,MAAME,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCN,QAArC,CAAb;AACH,GAjBD,EAiBG,EAjBH;AAkBA,SAAOH,IAAP;AACH,CAxBD;;AA0BA,eAAeJ,gBAAf","sourcesContent":["// NPM Modules\nimport React from 'react';\n\nconst HideOnScrollDown = () => {\n    // Variables\n    const prevScrollY = React.useRef();\n    const [hide, setHide] = React.useState(false);\n    // Hook\n    React.useEffect(() => {\n        // When scrolling\n        const onScroll = () => {\n            setHide(hide => {\n                const scrolledDown = window.scrollY > prevScrollY.current;\n                if (window.scrollY < 100) return false;\n                else if (scrolledDown && !hide) return true;\n                else if (!scrolledDown && hide) return false;\n                else {\n                    prevScrollY.current = window.scrollY;\n                    return hide;\n                }\n            });\n        };\n        // Listeners \n        window.addEventListener(\"scroll\", onScroll);\n        return () => window.removeEventListener(\"scroll\", onScroll);\n    }, []);\n    return hide;\n};\n\nexport default HideOnScrollDown;\n  "]},"metadata":{},"sourceType":"module"}