{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\keepcoding-wallaclone-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\keepcoding-wallaclone-master\\\\frontend\\\\src\\\\components\\\\chat\\\\ChatList\\\\ChatList.js\";\n// NPM Modules\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // Material UI\n// Components\n\nimport Chat from '../Chat';\nimport ChatTitle from '../ChatTitle';\nimport Loading from '../../utils/Loading'; // Own modules\n// Models\n\nimport { EMPTY_USER } from '../../../models/User'; // Assets\n// CSS\n\nimport './styles.css'; // Component to render a Chat panel\n\nexport default function ChatList(props) {\n  // Destructure props\n  const chats = props.chats,\n        onlineUsers = props.onlineUsers,\n        session = props.session,\n        isLoading = props.isLoading,\n        id = props.id,\n        t = props.t; // State\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        online = _useState2[0],\n        setOnline = _useState2[1];\n\n  const _useState3 = useState(EMPTY_USER),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        collapsed = _useState6[0],\n        setCollapsed = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentChat = _useState8[0],\n        setCurrentChat = _useState8[1]; // Used in small devices\n\n\n  const hideShowChatList = () => {\n    setCollapsed(!collapsed);\n  }; // On chat selected hide/show chat list (mobile first) then change\n\n\n  const onChatSelected = id => {\n    setCollapsed();\n    hideShowChatList();\n    props.history.push(\"/chats/\".concat(id));\n  }; // Carga del chat\n\n\n  useEffect(() => {\n    if (chats && chats.length > 0) {\n      let i = 0;\n\n      if (id) {\n        const index = chats.findIndex(c => c._id === id);\n        i = index >= 0 ? index : 0;\n      }\n\n      const chat = chats[i];\n      let user = chat.users[0];\n\n      if (user._id === session._id) {\n        user = chat.users[1];\n      }\n\n      setUser(user);\n      setOnline(onlineUsers.indexOf(user.login) >= 0);\n      setCurrentChat(i);\n    }\n  }, [chats, onlineUsers, currentChat, session, id]); // Render\n\n  return React.createElement(\"div\", {\n    className: \"ChatList ChatList__Hide--\".concat(collapsed),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, chats.length > 0 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"aside\", {\n    className: \"ChatList__Menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, !isLoading && chats.map((chat, index) => {\n    // Owner\n    const owner = chat.users[0].login === props.session.login ? chat.users[1] : chat.users[0]; // Chat session\n\n    return React.createElement(ChatTitle, {\n      key: index,\n      chat: chat,\n      owner: owner,\n      active: chats[currentChat]._id === chat._id,\n      onChatSelected: onChatSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }), isLoading && React.createElement(Loading, {\n    text: t('Loading chats'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    className: \"ChatList__Main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, chats[currentChat] && React.createElement(Chat, {\n    id: chats[currentChat]._id,\n    session: session,\n    user: user,\n    online: online,\n    messages: chats[currentChat].messages,\n    name: chats[currentChat].advert.name,\n    onClickBack: hideShowChatList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), !chats.length && React.createElement(\"h2\", {\n    className: \"Home__Subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, t('Sorry, we couldn\\'t find any chat for your user name')));\n}\nChatList.propTypes = {\n  chats: PropTypes.array.isRequired,\n  onlineUsers: PropTypes.array,\n  session: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool,\n  id: PropTypes.string,\n  t: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\Administrator\\Downloads\\keepcoding-wallaclone-master\\frontend\\src\\components\\chat\\ChatList\\ChatList.js"],"names":["React","useState","useEffect","PropTypes","Chat","ChatTitle","Loading","EMPTY_USER","ChatList","props","chats","onlineUsers","session","isLoading","id","t","online","setOnline","user","setUser","collapsed","setCollapsed","currentChat","setCurrentChat","hideShowChatList","onChatSelected","history","push","length","i","index","findIndex","c","_id","chat","users","indexOf","login","map","owner","messages","advert","name","propTypes","array","isRequired","object","bool","string","func"],"mappings":"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","sourcesContent":["// NPM Modules\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Material UI\n// Components\nimport Chat from '../Chat';\nimport ChatTitle from '../ChatTitle';\nimport Loading from '../../utils/Loading';\n// Own modules\n// Models\nimport { EMPTY_USER } from '../../../models/User';\n// Assets\n// CSS\nimport './styles.css';\n\n\n// Component to render a Chat panel\nexport default function ChatList(props) {\n\n    // Destructure props\n    const { chats, onlineUsers, session, isLoading, id, t } = props;\n\n    // State\n    const [ online, setOnline ] = useState(false);\n    const [ user, setUser ] = useState(EMPTY_USER);\n    const [ collapsed, setCollapsed ] = useState(true);\n    const [ currentChat, setCurrentChat ] = useState(0);\n\n    // Used in small devices\n    const hideShowChatList = () => { setCollapsed(!collapsed); }\n\n    // On chat selected hide/show chat list (mobile first) then change\n    const onChatSelected = id => { \n        setCollapsed();\n        hideShowChatList();\n        props.history.push(`/chats/${id}`);\n    }\n    \n    // Carga del chat\n    useEffect(() => {\n        if (chats && chats.length > 0) {\n            let i = 0;\n            if (id) {\n                const index = chats.findIndex(c => c._id === id);\n                i = index >= 0 ? index : 0;\n            }\n            const chat = chats[i];\n            let user = chat.users[0];\n            if (user._id === session._id) {\n                user = chat.users[1];\n            }\n            setUser(user);\n            setOnline(onlineUsers.indexOf(user.login) >= 0)\n            setCurrentChat(i);   \n        }\n    }, [chats, onlineUsers, currentChat, session, id])\n\n    // Render\n    return (\n        <div className={`ChatList ChatList__Hide--${collapsed}`}>\n        { chats.length > 0 && \n            <React.Fragment>\n                <aside className='ChatList__Menu'>\n                {   !isLoading && chats.map((chat, index) => {\n                        // Owner\n                        const owner = chat.users[0].login === props.session.login ? chat.users[1]:chat.users[0];\n                        // Chat session\n                        return <ChatTitle \n                                    key={index}\n                                    chat={chat}\n                                    owner={owner}\n                                    active={chats[currentChat]._id === chat._id}\n                                    onChatSelected={onChatSelected}\n                                />\n                    })\n                }\n                { isLoading && <Loading text={t('Loading chats')}/> }\n                </aside>\n                <main className='ChatList__Main'>\n                { chats[currentChat] &&\n                    <Chat \n                        id={chats[currentChat]._id}\n                        session={session}\n                        user={user}\n                        online={online}\n                        messages={chats[currentChat].messages}\n                        name={chats[currentChat].advert.name}\n                        onClickBack={hideShowChatList}\n                    />\n                }\n                </main>\n            </React.Fragment>\n        }\n        { !chats.length && \n            <h2 className='Home__Subtitle'>{t('Sorry, we couldn\\'t find any chat for your user name')}</h2>\n        }\n        </div>\n    );\n}\n\nChatList.propTypes = {\n    chats: PropTypes.array.isRequired,\n    onlineUsers: PropTypes.array,\n    session: PropTypes.object.isRequired,\n    isLoading: PropTypes.bool,\n    id: PropTypes.string,\n    t: PropTypes.func.isRequired,\n}"]},"metadata":{},"sourceType":"module"}