{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\keepcoding-wallaclone-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\keepcoding-wallaclone-master\\\\frontend\\\\src\\\\containers\\\\SectionList\\\\SectionList.js\";\n// NPM Modules\nimport React, { useState, useEffect } from 'react'; // Material UI\n\nimport Container from '@material-ui/core/Container'; // Components\n\nimport ModalConfirm from '../../components/modals/ModalConfirm';\nimport AdvertList from '../../components/adverts/AdvertList';\nimport HeaderFavorites from '../../components/headers/HeaderFavorites';\nimport HeaderPublished from '../../components/headers/HeaderPublished';\nimport HeaderHistory from '../../components/headers/HeaderHistory';\nimport Footer from '../../components/layout/Footer';\nimport NavBar from '../../components/layout/NavBar'; // Own modules\n// Models\n// Assets\n// CSS\n// Section with a list of adverts\n\nexport default function SectionList(props) {\n  // Translate\n  const t = props.t; // Destructure props\n\n  const enqueueSnackbar = props.enqueueSnackbar,\n        fetchUserAdverts = props.fetchUserAdverts,\n        fetchFavorites = props.fetchFavorites,\n        fetchIterateAdverts = props.fetchIterateAdverts,\n        fetchSoldHistory = props.fetchSoldHistory,\n        setCurrentPage = props.setCurrentPage,\n        setFavorite = props.setFavorite,\n        bookAdvert = props.bookAdvert,\n        sellAdvert = props.sellAdvert,\n        deleteAdvert = props.deleteAdvert,\n        createChat = props.createChat,\n        logout = props.logout;\n  const _props$lastCall = props.lastCall,\n        start = _props$lastCall.start,\n        end = _props$lastCall.end,\n        totalCount = _props$lastCall.totalCount;\n  const _props$ui = props.ui,\n        currentPage = _props$ui.currentPage,\n        isFetching = _props$ui.isFetching;\n  const adverts = props.adverts,\n        session = props.session,\n        chats = props.chats,\n        history = props.history,\n        listType = props.listType;\n  const login = props.match.params.login;\n  const sessionLogin = props.session.login; // Cargo anuncios del usuario solicitado\n\n  useEffect(() => {\n    switch (listType) {\n      case 'history':\n        fetchSoldHistory().catch(error => enqueueSnackbar(t('Error loading USER sold history ERROR', {\n          user: sessionLogin,\n          error\n        }), {\n          variant: 'error'\n        }));\n        break;\n\n      case 'favorites':\n        fetchFavorites().catch(error => enqueueSnackbar(t('Error loading favorites ERROR', {\n          error\n        }), {\n          variant: 'error'\n        }));\n        break;\n\n      case 'published':\n        fetchUserAdverts(login).catch(error => enqueueSnackbar(t('Error loading USER adverts ERROR', {\n          user: login,\n          error\n        }), {\n          variant: 'error'\n        }));\n        break;\n\n      default:\n        break;\n    }\n  }, [listType, fetchSoldHistory, fetchFavorites, fetchUserAdverts, enqueueSnackbar, login, sessionLogin, t]); // Paginación sobre la colección de anuncios\n\n  const fetchIterateAdvertsHandler = direction => {\n    fetchIterateAdverts(direction).catch(error => enqueueSnackbar(t('Error iterating adverts ERROR', {\n      error\n    }), {\n      variant: 'error'\n    }));\n  }; // Favorito\n\n\n  const favoriteAdvertHandler = slug => {\n    setFavorite(slug).catch(error => enqueueSnackbar(t('Error adding advert to favorite ERROR', {\n      error\n    }), {\n      variant: 'error'\n    }));\n  }; // Reservado\n\n\n  const bookAdvertHandler = slug => {\n    bookAdvert(slug).catch(error => enqueueSnackbar(t('Error setting advert as booked ERROR', {\n      error\n    }), {\n      variant: 'error'\n    }));\n  }; // Vendido\n\n\n  const sellAdvertHandler = slug => {\n    sellAdvert(slug).catch(error => enqueueSnackbar(t('Error setting advert as sold ERROR', {\n      error\n    }), {\n      variant: 'error'\n    }));\n  }; // Open chat\n\n\n  const openChatHandler = slug => {\n    // Check first if already have a chat for that advert\n    const i = chats.findIndex(c => c.advert.slug === slug);\n\n    if (i < 0) {\n      createChat(slug).catch(error => enqueueSnackbar(t('Error opening a new chat session ERROR', {\n        error\n      }), {\n        variant: 'error'\n      }));\n    } else {\n      history.push(\"/chats/\".concat(chats[i]._id));\n    }\n  }; // Edit Advert\n\n\n  const editAdvertHandler = slug => history.push(\"/advert/edit/\".concat(slug)); // Borrar anuncio\n\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showModalDelete = _useState2[0],\n        setShowModalDelete = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        slug = _useState4[0],\n        setSlug = _useState4[1];\n\n  const deleteAdvertRequestHandler = slug => {\n    setSlug(slug);\n    setShowModalDelete(true);\n  };\n\n  const confirmDeleteAdvert = () => {\n    setShowModalDelete(false);\n\n    if (slug) {\n      deleteAdvert(slug).then(res => enqueueSnackbar(t('Advert SLUG deleted', {\n        slug\n      }), {\n        variant: 'success'\n      })).catch(error => enqueueSnackbar(t('Error deleting advert ERROR', {\n        error\n      }), {\n        variant: 'error'\n      }));\n    } else {\n      enqueueSnackbar(t('Error identifying advert to be deleted'), {\n        variant: 'error'\n      });\n    }\n  };\n\n  const cancelDeleteAdvert = () => {\n    setSlug(undefined);\n    setShowModalDelete(false);\n  }; // Render\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    session: session,\n    onLogout: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Container, {\n    className: \"Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"main\", {\n    className: \"Section__Wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, HeaderSection(listType, totalCount, login, session), React.createElement(AdvertList, {\n    type: \"list\",\n    start: start,\n    end: end,\n    totalCount: totalCount,\n    currentPage: currentPage,\n    adverts: adverts,\n    session: session,\n    isLoading: isFetching,\n    onBookAdvert: bookAdvertHandler,\n    onSellAdvert: sellAdvertHandler,\n    onDeleteAdvert: deleteAdvertRequestHandler,\n    onFavoriteAdvert: favoriteAdvertHandler,\n    onSetCurrentPage: setCurrentPage,\n    onfetchIterateAdverts: fetchIterateAdvertsHandler,\n    onOpenChat: openChatHandler,\n    onEditAdvert: editAdvertHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), showModalDelete && React.createElement(ModalConfirm, {\n    onConfirm: confirmDeleteAdvert,\n    onCancel: cancelDeleteAdvert,\n    visible: true,\n    type: \"warning\",\n    title: t('Are you sure to delete the advert?'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(Footer, {\n    session: session,\n    onLogout: logout,\n    active: listType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }));\n}\n\nfunction HeaderSection(listType, totalCount, login, session) {\n  switch (listType) {\n    case 'favorites':\n      return React.createElement(HeaderFavorites, {\n        totalCount: totalCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n\n    case 'published':\n      return React.createElement(HeaderPublished, {\n        login: login,\n        session: session,\n        totalCount: totalCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      });\n\n    case 'history':\n      return React.createElement(HeaderHistory, {\n        totalCount: totalCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      });\n\n    default:\n      return null;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Downloads\\keepcoding-wallaclone-master\\frontend\\src\\containers\\SectionList\\SectionList.js"],"names":["React","useState","useEffect","Container","ModalConfirm","AdvertList","HeaderFavorites","HeaderPublished","HeaderHistory","Footer","NavBar","SectionList","props","t","enqueueSnackbar","fetchUserAdverts","fetchFavorites","fetchIterateAdverts","fetchSoldHistory","setCurrentPage","setFavorite","bookAdvert","sellAdvert","deleteAdvert","createChat","logout","lastCall","start","end","totalCount","ui","currentPage","isFetching","adverts","session","chats","history","listType","login","match","params","sessionLogin","catch","error","user","variant","fetchIterateAdvertsHandler","direction","favoriteAdvertHandler","slug","bookAdvertHandler","sellAdvertHandler","openChatHandler","i","findIndex","c","advert","push","_id","editAdvertHandler","showModalDelete","setShowModalDelete","undefined","setSlug","deleteAdvertRequestHandler","confirmDeleteAdvert","then","res","cancelDeleteAdvert","HeaderSection"],"mappings":"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","sourcesContent":["// NPM Modules\nimport React, { useState, useEffect } from 'react';\n// Material UI\nimport Container from '@material-ui/core/Container';\n// Components\nimport ModalConfirm from '../../components/modals/ModalConfirm';\nimport AdvertList from '../../components/adverts/AdvertList';\nimport HeaderFavorites from '../../components/headers/HeaderFavorites';\nimport HeaderPublished from '../../components/headers/HeaderPublished';\nimport HeaderHistory from '../../components/headers/HeaderHistory';\nimport Footer from '../../components/layout/Footer';\nimport NavBar from '../../components/layout/NavBar';\n// Own modules\n// Models\n// Assets\n// CSS\n\n// Section with a list of adverts\nexport default function SectionList (props) {\n    \n    // Translate\n    const { t } = props;\n\n    // Destructure props\n    const { enqueueSnackbar, \n            fetchUserAdverts, fetchFavorites, fetchIterateAdverts, fetchSoldHistory, setCurrentPage, \n            setFavorite, bookAdvert, sellAdvert, deleteAdvert, createChat, logout } = props;\n    const { start, end, totalCount } = props.lastCall;\n    const { currentPage, isFetching } = props.ui;\n    const { adverts, session, chats, history, listType } = props;\n    const { login } = props.match.params;\n    const sessionLogin = props.session.login;\n\n    // Cargo anuncios del usuario solicitado\n    useEffect(() => {\n        switch (listType) {\n            case 'history':\n                fetchSoldHistory()\n                .catch(error => enqueueSnackbar(t('Error loading USER sold history ERROR', {user: sessionLogin, error}), { variant: 'error' }));\n                break;\n            case 'favorites':                \n                fetchFavorites()\n                .catch(error => enqueueSnackbar(t('Error loading favorites ERROR', {error}), { variant: 'error' }));\n                break;\n            case 'published':\n                fetchUserAdverts(login)\n                .catch(error => enqueueSnackbar(t('Error loading USER adverts ERROR', {user: login, error}), { variant: 'error' }));\n                break;\n            default:\n                break;\n        }\n    }, [listType, fetchSoldHistory, fetchFavorites, fetchUserAdverts, enqueueSnackbar, login, sessionLogin, t]);\n\n    // Paginación sobre la colección de anuncios\n    const fetchIterateAdvertsHandler = (direction) => {\n        fetchIterateAdverts(direction).catch(error => enqueueSnackbar(t('Error iterating adverts ERROR', {error}), { variant: 'error' }));\n    }\n\n    // Favorito\n    const favoriteAdvertHandler = slug => {\n        setFavorite(slug).catch(error => enqueueSnackbar(t('Error adding advert to favorite ERROR', {error}), { variant: 'error' }));\n    }\n\n    // Reservado\n    const bookAdvertHandler = slug => {\n        bookAdvert(slug).catch(error => enqueueSnackbar(t('Error setting advert as booked ERROR', {error}), { variant: 'error' }));\n    };\n\n    // Vendido\n    const sellAdvertHandler = slug => {\n        sellAdvert(slug).catch(error => enqueueSnackbar(t('Error setting advert as sold ERROR', {error}), { variant: 'error', }));\n    };\n\n    // Open chat\n    const openChatHandler = slug => {\n        // Check first if already have a chat for that advert\n        const i = chats.findIndex(c => c.advert.slug === slug);\n        if (i < 0 ) {\n            createChat(slug).catch (error => enqueueSnackbar(t('Error opening a new chat session ERROR', {error}), { variant: 'error' }));\n        } else {\n            history.push(`/chats/${chats[i]._id}`);\n        }\n    }\n\n    // Edit Advert\n    const editAdvertHandler = slug => history.push(`/advert/edit/${slug}`);\n\n    // Borrar anuncio\n    const [showModalDelete, setShowModalDelete] = useState(false);\n    const [slug, setSlug] = useState(undefined);\n    const deleteAdvertRequestHandler = slug => {\n        setSlug(slug)\n        setShowModalDelete(true);\n    }\n    const confirmDeleteAdvert = () => {\n        setShowModalDelete(false);\n        if (slug) {\n            deleteAdvert(slug)\n            .then(res => enqueueSnackbar(t('Advert SLUG deleted', {slug}), { variant: 'success', }))\n            .catch(error => enqueueSnackbar(t('Error deleting advert ERROR', {error}), { variant: 'error', }));    \n        } else {\n            enqueueSnackbar(t('Error identifying advert to be deleted'), { variant: 'error', });    \n        }\n    };\n    const cancelDeleteAdvert = () => {\n        setSlug(undefined)\n        setShowModalDelete(false);\n    };\n   \n    // Render\n    return (\n        <React.Fragment>\n            <NavBar session={session} onLogout={logout}/>\n            <Container className='Container'>\n                <main className='Section__Wrapper'>\n                    {HeaderSection(listType, totalCount, login, session)}\n                    <AdvertList \n                        type='list' \n                        start={start}\n                        end={end}\n                        totalCount={totalCount}\n                        currentPage={currentPage}\n                        adverts={adverts}\n                        session={session}\n                        isLoading={isFetching}\n                        onBookAdvert={bookAdvertHandler}\n                        onSellAdvert={sellAdvertHandler}\n                        onDeleteAdvert={deleteAdvertRequestHandler}\n                        onFavoriteAdvert={favoriteAdvertHandler}\n                        onSetCurrentPage={setCurrentPage}\n                        onfetchIterateAdverts={fetchIterateAdvertsHandler}\n                        onOpenChat={openChatHandler}\n                        onEditAdvert={editAdvertHandler}\n                    />\n                </main>\n                {   showModalDelete && \n                    <ModalConfirm   onConfirm={confirmDeleteAdvert} \n                                    onCancel={cancelDeleteAdvert} \n                                    visible={true} type='warning'\n                                    title={t('Are you sure to delete the advert?')}\n                    /> \n                }\n            </Container>\n            <Footer session={session} onLogout={logout} active={listType}/>\n        </React.Fragment>\n    );\n}\n\nfunction HeaderSection(listType, totalCount, login, session) {\n    switch (listType) {\n        case 'favorites':\n            return <HeaderFavorites totalCount={totalCount}/>;\n        case 'published':\n            return <HeaderPublished login={login} session={session} totalCount={totalCount}/>;\n        case 'history':\n            return <HeaderHistory totalCount={totalCount}/>;\n        default:\n            return null;\n    }\n  }"]},"metadata":{},"sourceType":"module"}