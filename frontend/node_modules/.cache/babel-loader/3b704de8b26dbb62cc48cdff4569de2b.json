{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\keepcoding-wallaclone-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\keepcoding-wallaclone-master\\\\frontend\\\\src\\\\containers\\\\Reset\\\\Reset.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// NPM Modules\nimport React from 'react';\nimport { withNamespaces } from 'react-i18next'; // Material UI\n// Own components\n\nimport AuthForm from '../../components/forms/AuthForm'; // Models\n// Own modules\n// Assets\n// CSS\n// Reset password section\n\nfunction Reset(props) {\n  // Translate\n  const t = props.t; // Reset de contraseña\n\n  const resetPassword = async inputs => {\n    const _inputs = _objectSpread({}, inputs),\n          password = _inputs.password,\n          password_2 = _inputs.password_2;\n\n    if (password !== password_2) {\n      return props.enqueueSnackbar(t(\"Error. Both passwords should match\"), {\n        variant: 'error'\n      });\n    }\n\n    props.resetAccount(props.match.params.token, password).then(user => props.enqueueSnackbar(t('Password reset successfully'), {\n      variant: 'success'\n    })).catch(error => props.enqueueSnackbar(error, {\n      variant: 'error'\n    }));\n  };\n  /**\n  * Render\n  */\n\n\n  return React.createElement(AuthForm, {\n    form: \"reset\",\n    isLoading: props.isAuthenticating,\n    onSubmit: resetPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n}\n\nexport default withNamespaces()(Reset);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Downloads\\keepcoding-wallaclone-master\\frontend\\src\\containers\\Reset\\Reset.js"],"names":["React","withNamespaces","AuthForm","Reset","props","t","resetPassword","inputs","password","password_2","enqueueSnackbar","variant","resetAccount","match","params","token","then","user","catch","error","isAuthenticating"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,iCAArB,C,CACA;AACA;AACA;AACA;AAGA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAElB;AAFkB,QAGVC,CAHU,GAGJD,KAHI,CAGVC,CAHU,EAKlB;;AACA,QAAMC,aAAa,GAAG,MAAOC,MAAP,IAAkB;AAAA,sCACCA,MADD;AAAA,UAC5BC,QAD4B,WAC5BA,QAD4B;AAAA,UAClBC,UADkB,WAClBA,UADkB;;AAEpC,QAAKD,QAAQ,KAAKC,UAAlB,EAA+B;AAC3B,aAAOL,KAAK,CAACM,eAAN,CAAsBL,CAAC,CAAC,oCAAD,CAAvB,EAA+D;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAA/D,CAAP;AACH;;AACDP,IAAAA,KAAK,CAACQ,YAAN,CAAmBR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,KAAtC,EAA6CP,QAA7C,EACCQ,IADD,CACOC,IAAI,IAAIb,KAAK,CAACM,eAAN,CAAsBL,CAAC,CAAC,6BAAD,CAAvB,EAAwD;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAxD,CADf,EAECO,KAFD,CAEQC,KAAK,IAAIf,KAAK,CAACM,eAAN,CAAsBS,KAAtB,EAA6B;AAAER,MAAAA,OAAO,EAAE;AAAX,KAA7B,CAFjB;AAGH,GARD;AAUA;;;;;AAGA,SACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAEP,KAAK,CAACgB,gBAFrB;AAGI,IAAA,QAAQ,EAAEd,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH;;AAED,eAAeL,cAAc,GAAGE,KAAH,CAA7B","sourcesContent":["// NPM Modules\nimport React from 'react';\nimport { withNamespaces } from 'react-i18next';\n// Material UI\n// Own components\nimport AuthForm from '../../components/forms/AuthForm';\n// Models\n// Own modules\n// Assets\n// CSS\n\n\n// Reset password section\nfunction Reset(props) {\n    \n    // Translate\n    const { t } = props;\n\n    // Reset de contraseña\n    const resetPassword = async (inputs) => {\n        const { password, password_2 } = {...inputs};\n        if ( password !== password_2 ) {\n            return props.enqueueSnackbar(t(\"Error. Both passwords should match\"), { variant: 'error', });\n        } \n        props.resetAccount(props.match.params.token, password)\n        .then (user => props.enqueueSnackbar(t('Password reset successfully'), { variant: 'success', }))\n        .catch (error => props.enqueueSnackbar(error, { variant: 'error', }));\n    }\n    \n    /**\n    * Render\n    */\n    return (\n        <AuthForm \n            form='reset'\n            isLoading={props.isAuthenticating} \n            onSubmit={resetPassword} \n        />\n    );\n}\n\nexport default withNamespaces()(Reset);"]},"metadata":{},"sourceType":"module"}