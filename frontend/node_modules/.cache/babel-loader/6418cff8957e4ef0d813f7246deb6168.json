{"ast":null,"code":"// Endpoint\nconst API_URL = process.env.REACT_APP_API_URL.replace('/apiv1', ''); // Empty advert aux\n\nexport const EMPTY_CHAT = {\n  _id: undefined,\n  advert: undefined,\n  users: [],\n  messages: []\n}; // Constantes para el trabajo con el modelo de chat\n\nexport const CHAT_CONSTANTS = {\n  STATUS: {\n    ACK: 0,\n    // Assuming what read from API is already read.\n    WAIT: 1,\n    SENT: 2\n  }\n}; // Modelo de chat en wallaclone\n\nexport default class Chat {\n  /**\n   * Constructor\n   * @param {Object} chat Chat objet \n   */\n  constructor(chat) {\n    this._id = chat._id;\n    this.advert = chat.advert;\n    this.users = chat.users;\n    this.messages = chat.messages; // Adjust path to images\n\n    this.users.map((user, index) => user.avatar = \"\".concat(API_URL).concat(user.avatar));\n    this.advert.thumbnail = chat.advert.thumbnail.startsWith('/images/') ? \"\".concat(API_URL).concat(chat.advert.thumbnail) : chat.advert.thumbnail;\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\models\\Chat.js"],"names":["API_URL","process","env","REACT_APP_API_URL","replace","EMPTY_CHAT","_id","undefined","advert","users","messages","CHAT_CONSTANTS","STATUS","ACK","WAIT","SENT","Chat","constructor","chat","map","user","index","avatar","thumbnail","startsWith"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,CAA8BC,OAA9B,CAAsC,QAAtC,EAA+C,EAA/C,CAAhB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,GAAG,EAAEC,SADiB;AAEtBC,EAAAA,MAAM,EAAED,SAFc;AAGtBE,EAAAA,KAAK,EAAE,EAHe;AAItBC,EAAAA,QAAQ,EAAE;AAJY,CAAnB,C,CAOP;;AACA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAE,CADD;AACI;AACRC,IAAAA,IAAI,EAAE,CAFF;AAGJC,IAAAA,IAAI,EAAE;AAHF;AADkB,CAAvB,C,CAQP;;AACA,eAAe,MAAMC,IAAN,CAAW;AAEtB;;;;AAIAC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKZ,GAAL,GAAWY,IAAI,CAACZ,GAAhB;AACA,SAAKE,MAAL,GAAcU,IAAI,CAACV,MAAnB;AACA,SAAKC,KAAL,GAAaS,IAAI,CAACT,KAAlB;AACA,SAAKC,QAAL,GAAgBQ,IAAI,CAACR,QAArB,CAJc,CAKd;;AACA,SAAKD,KAAL,CAAWU,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiBD,IAAI,CAACE,MAAL,aAAiBtB,OAAjB,SAA2BoB,IAAI,CAACE,MAAhC,CAAhC;AACA,SAAKd,MAAL,CAAYe,SAAZ,GAAwBL,IAAI,CAACV,MAAL,CAAYe,SAAZ,CAAsBC,UAAtB,CAAiC,UAAjC,cAAgDxB,OAAhD,SAA0DkB,IAAI,CAACV,MAAL,CAAYe,SAAtE,IAAkFL,IAAI,CAACV,MAAL,CAAYe,SAAtH;AACJ;;AAdsB","sourcesContent":["// Endpoint\nconst API_URL = process.env.REACT_APP_API_URL.replace('/apiv1','');\n\n// Empty advert aux\nexport const EMPTY_CHAT = {\n    _id: undefined,\n    advert: undefined,\n    users: [],\n    messages: [],\n}\n\n// Constantes para el trabajo con el modelo de chat\nexport const CHAT_CONSTANTS = {\n    STATUS: {\n        ACK: 0, // Assuming what read from API is already read.\n        WAIT: 1,\n        SENT: 2\n    }\n}\n\n// Modelo de chat en wallaclone\nexport default class Chat {\n    \n    /**\n     * Constructor\n     * @param {Object} chat Chat objet \n     */    \n    constructor(chat) {\n        this._id = chat._id;\n        this.advert = chat.advert;\n        this.users = chat.users;\n        this.messages = chat.messages;\n        // Adjust path to images\n        this.users.map((user, index) => user.avatar = `${API_URL}${user.avatar}`);\n        this.advert.thumbnail = chat.advert.thumbnail.startsWith('/images/')?`${API_URL}${chat.advert.thumbnail}`:chat.advert.thumbnail;\n   }\n}"]},"metadata":{},"sourceType":"module"}