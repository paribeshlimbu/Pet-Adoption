{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\src\\\\components\\\\hocs\\\\withPaginator\\\\withPaginator.js\";\n// Node modules\nimport React from 'react'; // Material UI\n\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'; // Css\n\nimport './styles.css'; // Proporciona funcionalidad de paginado a cualquier lista de objetos\n\nconst withPaginator = WrappedComponent => {\n  return function AdvertListWithPaginator(props) {\n    // Destructuring props\n    const adverts = props.adverts,\n          start = props.start,\n          end = props.end,\n          totalCount = props.totalCount;\n    let currentPage = props.currentPage,\n        isLoading = props.isLoading; // Local variables\n\n    const itemsPerPage = parseInt(process.env.REACT_APP_MAX_ADVERTS_UI);\n    const numPages = Math.ceil(adverts.length / itemsPerPage);\n    const minAdvert = currentPage * itemsPerPage;\n    const maxAdvert = currentPage * itemsPerPage + itemsPerPage; // Next/Previous page\n\n    const handleMovePaginator = increment => {\n      currentPage += increment;\n\n      if (currentPage > -1 && currentPage < numPages) {\n        props.onSetCurrentPage(currentPage);\n      }\n    }; // Previous page button\n\n\n    const renderButtonBack = () => {\n      let callAPI = !currentPage && start > 0;\n      let disableBack = !currentPage && !callAPI;\n      let Icon = !callAPI ? KeyboardArrowLeft : RotateLeftIcon;\n      return React.createElement(Button, {\n        size: \"small\",\n        onClick: () => !callAPI ? handleMovePaginator(-1) : props.onfetchIterateAdverts(-1),\n        disabled: disableBack,\n        className: \"ButtonStandard ButtonStandard__Green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }; // Next page button\n\n\n    const renderButtonNext = () => {\n      let callAPI = numPages <= currentPage + 1 && end + 1 < totalCount;\n      let disableNext = numPages <= currentPage + 1 && !callAPI;\n      let Icon = !callAPI ? KeyboardArrowRight : RotateLeftIcon;\n      return React.createElement(Button, {\n        size: \"small\",\n        onClick: () => !callAPI ? handleMovePaginator(1) : props.onfetchIterateAdverts(1),\n        disabled: disableNext,\n        className: \"ButtonStandard ButtonStandard__Green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, adverts.length > 0 && !props.isLoading && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"AdvertList__Paginator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MobileStepper, {\n      className: \"Paginator\",\n      variant: \"dots\",\n      steps: numPages,\n      position: \"static\",\n      activeStep: currentPage,\n      backButton: renderButtonBack(),\n      nextButton: renderButtonNext(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(WrappedComponent, Object.assign({}, props, {\n      adverts: adverts.slice(minAdvert, maxAdvert || 1),\n      isLoading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  };\n};\n\nexport default withPaginator;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\components\\hocs\\withPaginator\\withPaginator.js"],"names":["React","MobileStepper","Button","RotateLeftIcon","KeyboardArrowLeft","KeyboardArrowRight","withPaginator","WrappedComponent","AdvertListWithPaginator","props","adverts","start","end","totalCount","currentPage","isLoading","itemsPerPage","parseInt","process","env","REACT_APP_MAX_ADVERTS_UI","numPages","Math","ceil","length","minAdvert","maxAdvert","handleMovePaginator","increment","onSetCurrentPage","renderButtonBack","callAPI","disableBack","Icon","onfetchIterateAdverts","renderButtonNext","disableNext","slice"],"mappings":"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","sourcesContent":["// Node modules\nimport React from 'react';\n// Material UI\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n// Css\nimport './styles.css';\n\n// Proporciona funcionalidad de paginado a cualquier lista de objetos\nconst withPaginator = (WrappedComponent) => {\n\n    return function AdvertListWithPaginator(props) {\n\n        // Destructuring props\n        const { adverts, start, end, totalCount } = props;\n        let { currentPage, isLoading } = props;\n\n        // Local variables\n        const itemsPerPage=parseInt(process.env.REACT_APP_MAX_ADVERTS_UI);\n        const numPages = Math.ceil(adverts.length/itemsPerPage);\n        const minAdvert = currentPage * itemsPerPage;\n        const maxAdvert = currentPage * itemsPerPage + itemsPerPage;\n\n        // Next/Previous page\n        const handleMovePaginator = increment => {\n            currentPage += increment;\n            if (currentPage > -1 && currentPage < numPages) {\n                props.onSetCurrentPage(currentPage);\n            }\n        }\n\n        // Previous page button\n        const renderButtonBack = () => {\n            let callAPI = !currentPage && start > 0\n            let disableBack = !currentPage && !callAPI;\n            let Icon = !callAPI?KeyboardArrowLeft:RotateLeftIcon;\n            return  <Button size='small' onClick={()=>!callAPI?handleMovePaginator(-1):props.onfetchIterateAdverts(-1)} \n                            disabled={disableBack} className='ButtonStandard ButtonStandard__Green'>\n                        <Icon />\n                    </Button>\n        }\n\n        // Next page button\n        const renderButtonNext = () => {\n           \n            let callAPI = ( numPages <= currentPage + 1 ) && ( end + 1 < totalCount );\n            let disableNext = ( numPages <= currentPage + 1 ) && !callAPI;\n            let Icon = !callAPI?KeyboardArrowRight:RotateLeftIcon;\n            return  <Button size='small' onClick={()=>!callAPI?handleMovePaginator(1):props.onfetchIterateAdverts(1)} \n                            disabled={disableNext} className='ButtonStandard ButtonStandard__Green'>\n                        <Icon />\n                    </Button>\n        }\n       \n        return (\n            <React.Fragment>\n                { adverts.length > 0 && !props.isLoading &&\n                    <React.Fragment>\n                        <div className='AdvertList__Paginator'>\n                            <MobileStepper\n                                className='Paginator'\n                                variant='dots'\n                                steps={numPages}\n                                position='static'\n                                activeStep={currentPage}\n                                backButton={renderButtonBack()}\n                                nextButton={renderButtonNext()}\n                            />\n                        </div>\n                        {/* <div className='SearchPanel__Statistics'> \n                            <p>Resultados {props.start} a {props.end} recuperados en la última llamada de un total de {props.totalCount}</p>\n                        </div>  */}\n                    </React.Fragment>\n                }\n                <WrappedComponent {...props} adverts={adverts.slice(minAdvert, maxAdvert || 1)} isLoading={isLoading}/> \n            </React.Fragment>\n        ); \n    }\n}\n\nexport default withPaginator;"]},"metadata":{},"sourceType":"module"}