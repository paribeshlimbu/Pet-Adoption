{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\PetAdoption\\\\frontend\\\\src\\\\components\\\\hocs\\\\withForm\\\\withForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// NPM Modules\nimport React, { Component } from 'react'; // Material UI\n// Own modules\n// Models\n// Assets\n// CSS\n\nexport const Context = React.createContext();\n\nconst withForm = WrappedComponent => {\n  var _temp;\n\n  /**\n   */\n  return _temp = class Form extends Component {\n    // Constructor\n    constructor(props) {\n      super(props);\n\n      this.handleInputChange = event => {\n        this.setState({\n          [event.target.name]: event.target.value\n        }, () => this.handleNotifyChanges());\n      };\n\n      this.handleCheckChange = event => {\n        this.setState({\n          [event.target.name]: event.target.checked\n        }, () => this.handleNotifyChanges());\n      };\n\n      this.handleChangeMultiple = event => {\n        this.setState({\n          [event.target.name]: event.target.value\n        }, () => this.handleNotifyChanges());\n      };\n\n      this.handleChangeNumber = event => {\n        this.setState({\n          [event.target.name]: parseFloat(event.target.value)\n        }, () => this.handleNotifyChanges());\n      };\n\n      this.handleSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n      };\n\n      this.handleNotifyChanges = () => {\n        if (this.props.extra && this.props.extra.notifyChanges) {\n          this.props.extra.notifyChanges(this.state);\n        }\n      };\n\n      this.resetInputs = initial => this.setState(_objectSpread({}, initial));\n\n      this.state = _objectSpread({}, props.initial);\n    }\n\n    // Render\n    render() {\n      return React.createElement(Context.Provider, {\n        value: {\n          inputs: this.state,\n          handleInputChange: this.handleInputChange,\n          handleCheckChange: this.handleCheckChange,\n          handleChangeMultiple: this.handleChangeMultiple,\n          handleChangeNumber: this.handleChangeNumber\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nexport default withForm;","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\PetAdoption\\frontend\\src\\components\\hocs\\withForm\\withForm.js"],"names":["React","Component","Context","createContext","withForm","WrappedComponent","Form","constructor","props","handleInputChange","event","setState","target","name","value","handleNotifyChanges","handleCheckChange","checked","handleChangeMultiple","handleChangeNumber","parseFloat","handleSubmit","preventDefault","onSubmit","state","extra","notifyChanges","resetInputs","initial","render","inputs"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,GAAGF,KAAK,CAACG,aAAN,EAAhB;;AAEP,MAAMC,QAAQ,GAAIC,gBAAD,IAAsB;AAAA;;AAEnC;;AAEA,iBAAO,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAEhC;AACAM,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAKnBC,iBALmB,GAKCC,KAAK,IAAI;AACzB,aAAKC,QAAL,CAAc;AACV,WAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,SAAd,EAEG,MAAM,KAAKC,mBAAL,EAFT;AAGH,OATkB;;AAAA,WAWnBC,iBAXmB,GAWCN,KAAK,IAAI;AACzB,aAAKC,QAAL,CAAc;AACV,WAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaK;AADxB,SAAd,EAEG,MAAM,KAAKF,mBAAL,EAFT;AAGH,OAfkB;;AAAA,WAiBnBG,oBAjBmB,GAiBIR,KAAK,IAAI;AAC5B,aAAKC,QAAL,CAAc;AACV,WAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,SAAd,EAEG,MAAM,KAAKC,mBAAL,EAFT;AAGH,OArBkB;;AAAA,WAuBnBI,kBAvBmB,GAuBET,KAAK,IAAI;AAC1B,aAAKC,QAAL,CAAc;AACV,WAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBO,UAAU,CAACV,KAAK,CAACE,MAAN,CAAaE,KAAd;AADrB,SAAd,EAEG,MAAM,KAAKC,mBAAL,EAFT;AAGH,OA3BkB;;AAAA,WA6BnBM,YA7BmB,GA6BJX,KAAK,IAAI;AACpBA,QAAAA,KAAK,CAACY,cAAN;AACA,aAAKd,KAAL,CAAWe,QAAX,CAAoB,KAAKC,KAAzB;AACH,OAhCkB;;AAAA,WAkCnBT,mBAlCmB,GAkCG,MAAM;AACxB,YAAI,KAAKP,KAAL,CAAWiB,KAAX,IAAoB,KAAKjB,KAAL,CAAWiB,KAAX,CAAiBC,aAAzC,EAAwD;AACpD,eAAKlB,KAAL,CAAWiB,KAAX,CAAiBC,aAAjB,CAA+B,KAAKF,KAApC;AACH;AACJ,OAtCkB;;AAAA,WAyCnBG,WAzCmB,GAyCLC,OAAO,IAAI,KAAKjB,QAAL,mBAAkBiB,OAAlB,EAzCN;;AAEf,WAAKJ,KAAL,qBAAiBhB,KAAK,CAACoB,OAAvB;AACH;;AAwCD;AACAC,IAAAA,MAAM,GAAG;AACL,aACI,oBAAC,OAAD,CAAS,QAAT;AAAkB,QAAA,KAAK,EAAE;AACrBC,UAAAA,MAAM,EAAE,KAAKN,KADQ;AAErBf,UAAAA,iBAAiB,EAAE,KAAKA,iBAFH;AAGrBO,UAAAA,iBAAiB,EAAE,KAAKA,iBAHH;AAIrBE,UAAAA,oBAAoB,EAAE,KAAKA,oBAJN;AAKrBC,UAAAA,kBAAkB,EAAE,KAAKA;AALJ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,gBAAD,oBACQ,KAAKX,KADb;AAEI,QAAA,QAAQ,EAAE,KAAKa,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,CADJ;AAcH;;AA9D+B,GAApC;AAgEH,CApED;;AAsEA,eAAejB,QAAf","sourcesContent":["// NPM Modules\nimport React, { Component } from 'react';\n// Material UI\n// Own modules\n// Models\n// Assets\n// CSS\n\nexport const Context = React.createContext();\n\nconst withForm = (WrappedComponent) => {\n\n    /**\n     */\n    return class Form extends Component {\n        \n        // Constructor\n        constructor(props) {\n            super(props);\n            this.state = {...props.initial}\n        }\n\n        handleInputChange = event => {\n            this.setState({\n                [event.target.name]: event.target.value\n            }, () => this.handleNotifyChanges());\n        }\n\n        handleCheckChange = event => {\n            this.setState({\n                [event.target.name]: event.target.checked\n            }, () => this.handleNotifyChanges());\n        }\n        \n        handleChangeMultiple = event => {\n            this.setState({\n                [event.target.name]: event.target.value\n            }, () => this.handleNotifyChanges());\n        };\n\n        handleChangeNumber = event => {\n            this.setState({\n                [event.target.name]: parseFloat(event.target.value)\n            }, () => this.handleNotifyChanges());\n        }\n\n        handleSubmit = event => {\n            event.preventDefault();\n            this.props.onSubmit(this.state);\n        }\n\n        handleNotifyChanges = () => {\n            if (this.props.extra && this.props.extra.notifyChanges) {\n                this.props.extra.notifyChanges(this.state);\n            }\n        }\n\n        // Reset fields\n        resetInputs = initial => this.setState({...initial});\n       \n        // Render\n        render() {\n            return (\n                <Context.Provider value={{\n                    inputs: this.state, \n                    handleInputChange: this.handleInputChange, \n                    handleCheckChange: this.handleCheckChange,\n                    handleChangeMultiple: this.handleChangeMultiple, \n                    handleChangeNumber: this.handleChangeNumber\n                }}>\n                    <WrappedComponent \n                        {...this.props}\n                        onSubmit={this.handleSubmit}\n                    />\n                </Context.Provider>\n            )\n        }\n    }\n};\n\nexport default withForm;"]},"metadata":{},"sourceType":"module"}